<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ablaze.UI</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Forms.UIAnimationHandler">
            <summary>
            Called when an animation is updated. If the handler returns false, the animation will halt.
            </summary>
            <param name="state">The current state and parameters of the animation.</param>
        </member>
        <member name="T:System.Windows.Forms.AnimationInfo">
            <summary>
            Holds the animation parameters and state for the UIAnimator class.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.Tag">
            <summary>
            The object that is transferred along with the animation.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.SyncRoot">
            <summary>
            Used for synchronizing animation callbacks.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.Stoppable">
            <summary>
            If true, the animation will stop if the value didn't update as expected.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.Elapsed">
            <summary>
            The elapsed time from the last update.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.state">
            <summary>
            The current state of the animation.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.Info">
            <summary>
            The field/property that is updated by this animation.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.Parent">
            <summary>
            The parent animator of this instance.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.OnUpdate">
            <summary>
            The function to be called after the value is updated.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.Exceptions">
            <summary>
            Gets or sets the way to handle exceptions.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo.IsValueType">
            <summary>
            Whether the animated field is a value type.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.AnimationInfo.TargetValue">
            <summary>
            Gets or sets the target value to approach with the animation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.AnimationInfo.LinearSpeed">
            <summary>
            The linear speed that is there to counteract the exponential infinity that one gets when dividing the distance between the current value and the target value with the animation speed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.AnimationInfo.IsFinished">
            <summary>
            Gets whether the animation is finished.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.AnimationInfo.State">
            <summary>
            Gets the current state of the animation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.AnimationInfo.Gradient">
            <summary>
            Gets or sets the animation speed multiplier [0, 1] (ie. the distance between the current value and the target value is multiplied by this value).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.AnimationInfo.Update(System.Boolean)">
            <summary>
            Updates the animation.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.AnimationInfo`1">
            <summary>
            Holds the animation parameters and state for the UIAnimator class.
            </summary>
            <typeparam name="T">The type of field/property that is updated.</typeparam>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo`1.CachedValue">
            <summary>
            The cached value of the property.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationInfo`1.currentValue">
            <summary>
            The current value of the property. If the animation has completed successfully, the current value will be equal to the target value. If an error has happened, it may be null.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.AnimationInfo`1.CurrentValue">
            <summary>
            The cached current value of the property. If the animation has completed successfully,
            the current value will be equal to the target value. If an error has happened, it may be null.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.AnimationInfo`1.ChangeTargetValue(System.Object)">
            <summary>
            Changes the target value of this animation.
            </summary>
            <param name="newValue">The new target value.</param>
        </member>
        <member name="M:System.Windows.Forms.AnimationInfo`1.Update(System.Boolean)">
            <summary>
            Updates the animation.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.AnimationInfo`1.ToString">
            <summary>
            Gets a string that represents this instance.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.AnimationState">
            <summary>
            Represents the current state of an animation.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationState.NotYetBegun">
            <summary>
            The default value before the animation has even started.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationState.ValueDidntUpdateAsExpected">
            <summary>
            The field was modified unexpectedly during the animation process.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationState.UpdateSuccess">
            <summary>
            The field was updated successfully to the next value (not used by the AnimationFinished event).
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationState.Completed">
            <summary>
            The animation is completed successfully.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.AnimationState.Halted">
            <summary>
            The animation was halted, either because Halt() was called or possibly because the value was modified from
            outside the animation or the value stayed unchanged after update.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DataGridViewPrinter">
            <summary>
            Prints the data in a DataGridView.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DataGridViewPrinter.#ctor(System.Windows.Forms.DataGridView,System.String,System.Boolean,System.Boolean,System.String[])">
            <summary>
            Initializes a new DataGridViewPrinter instance.
            </summary>
            <param name="grid">The data grid to print.</param>
            <param name="pageTitle">The page header.</param>
            <param name="printOnlySelectedRows">If true, only the rows that are selected in the DataGridView are printed.</param>
            <param name="fitToPageWidth">If true, the grid will be resized to fit a single page.</param>
            <param name="columnsToPrint">The names of the columns to print. If null, all columns are printed.</param>
        </member>
        <member name="M:System.Windows.Forms.DataGridViewPrinter.Print">
            <summary>
            Presents a print dialog to the user and prints the DataGridView if the user clicks OK.
            Returns true if printing actually took place.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DataGridViewPrinter.Finalize">
            <summary>
            Disposes of the resources used by the DataGridViewPrinter.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DataGridViewPrinter.Dispose">
            <summary>
            Disposes of the resources used by the DataGridViewPrinter.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.EventListener">
            <summary>
            Listens to application events (usually keyboard and mouse input).
            </summary>
        </member>
        <member name="F:System.Windows.Forms.EventListener.ConsumeEvent">
            <summary>
            If true, the current/next event is consumed and won't propogate any further.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.MouseDown">
            <summary>
            Fired when a mouse button is pressed. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.CursorMove">
            <summary>
            Fired when the mouse is cursor has moved on screen. 'e' will hold the screen cursor position.
            Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.MouseUp">
            <summary>
            Fired when a mouse button is released. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.MouseWheel">
            <summary>
            Fired when a mouse wheel is scrolled. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.MouseDoubleClick">
            <summary>
            Fired when a mouse button is double-clicked. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.KeyPress">
            <summary>
            Fired when a key is pressed. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.EventListener.KeyRelease">
            <summary>
            Fired when a key is released. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.EventListener.LastEvent">
            <summary>
            Gets the last application event.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.EventListener.Enabled">
            <summary>
            Whether the key press hook is enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.EventListener.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes the specified message and fires the appropriate event.
            </summary>
            <param name="m">The message to filter.</param>
        </member>
        <member name="T:System.Windows.Forms.BufferedSplitContainer">
            <summary>
            A double-buffered split control container.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.BufferedSplitContainer.CanRaiseEvents">
            <summary>
            Gets whether events can be raised on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.BufferedSplitContainer.#ctor">
            <summary>
            Initializes a double-buffered split control container using default parameters.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.BufferedSplitContainer.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a double-buffered split control container using the specfied parameters.
            </summary>
            <param name="panel1">Whether to use double-buffering in the first panel.</param>
            <param name="panel2">Whether to use double-buffering in the second panel.</param>
        </member>
        <member name="T:System.Windows.Forms.BufferedTreeView">
            <summary>
            A double-buffered tree view control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.BufferedTreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            Called when the tree view handle is created.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="T:System.Windows.Forms.ClipboardListener">
            <summary>
            Monitors the clipboard, and raises an event whenever its contents change.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ClipboardListener.ClipboardContentChanged">
            <summary>
            Fired when the clipboard content has changed. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ClipboardListener.Enabled">
            <summary>
            Gets or sets whether the clipboard is monitored.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.ConsoleControl">
            <summary>
            An embeddable console control.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.ConsoleControl.ConsoleEventHandler">
            <summary>
            The console event handler is used for console events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.String"/> instance containing the event data.</param>
        </member>
        <member name="F:System.Windows.Forms.ConsoleControl.processInterace">
            <summary>
            The internal process interface used to interface with the process.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ConsoleControl.inputStart">
            <summary>
            Current position that input starts at.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ConsoleControl.isInputEnabled">
            <summary>
            The is input enabled flag.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ConsoleControl.lastInput">
            <summary>
            The last input string (used so that we can make sure we don't echo input twice).
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ConsoleControl.OnConsoleOutput">
            <summary>
            Occurs when console output is produced.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ConsoleControl.OnConsoleInput">
            <summary>
            Occurs when console input is produced.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ConsoleControl.IsInputEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is input enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ConsoleControl.IsProcessRunning">
            <summary>
            Gets a value indicating whether this instance is process running.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ConsoleControl.ProcessInterface">
            <summary>
            Gets the process interface.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ConsoleControl.TerminateProcessOnClose">
            <summary>
            Gets or sets whether to terminate the invoked process on close.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ConsoleControl.CreateParams">
            <summary>
            Specified that the RichTextBox instance should use RichEdit50W API instead of the old RichEdit20W.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ConsoleControl"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.processInterace_OnProcessError(System.Object,System.Windows.Forms.ProcessEventArgs)">
            <summary>
            Handles the OnProcessError event of the processInterace control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The <see cref="T:System.Windows.Forms.ProcessEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.processInterace_OnProcessOutput(System.Object,System.Windows.Forms.ProcessEventArgs)">
            <summary>
            Handles the OnProcessOutput event of the processInterace control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The <see cref="T:System.Windows.Forms.ProcessEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.processInterace_OnProcessExit(System.Object,System.Windows.Forms.ProcessEventArgs)">
            <summary>
            Handles the OnProcessExit event of the processInterace control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The <see cref="T:System.Windows.Forms.ProcessEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Fired when a key is being pressed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.WriteOutput(System.String,System.Drawing.Color)">
            <summary>
            Writes the output to the console control.
            </summary>
            <param name="output">The output.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.ClearOutput">
            <summary>
            Clears the output.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.WriteInput(System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Writes the input to the console control.
            </summary>
            <param name="input">The input.</param>
            <param name="color">The color.</param>
            <param name="echo">Whether to echo the input.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.StartProcess(System.String,System.String)">
            <summary>
            Runs a process.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.StopProcess">
            <summary>
            Stops the process.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.FireConsoleOutputEvent(System.String)">
            <summary>
            Fires the console output event.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.FireConsoleInputEvent(System.String)">
            <summary>
            Fires the console input event.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:System.Windows.Forms.ConsoleControl.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Called when the handle is destroyed.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DropShadowForm">
            <summary>
            Adds a shadow to the specified borderless form.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DropShadowForm.IsSupported">
            <summary>
            Whether drop shadows are supported. Windows 2000 or later is required.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.IsShadowVisible">
            <summary>
            Gets whether the shadow is currently visible.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.IsDisposed">
            <summary>
            Gets whether the form is disposed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.Opacity">
            <summary>
            Gets or sets the opacity of the form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.ShowShadow">
            <summary>
            Gets or sets whether the shadow should be shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.ShadowColor">
            <summary>
            Gets or sets the shadow color. An alpha of 160 usually looks best.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.ShadowBlur">
            <summary>
            Gets or sets the shadow blur radius.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.AllowMouseResize">
            <summary>
            Gets or sets whether mouse resize is allowed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.CreateParams">
            <summary>
            Specifies the parameters used to create the form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DropShadowForm.ShowWithoutActivation">
            <summary>
            Gets whether the window should be shown without being activated.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.#ctor(System.Windows.Forms.Form)">
            <summary>
            Adds a shadow to the specified borderless form.
            </summary>
            <param name="form">The window to add the shadow to.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.UpdateSize">
            <summary>
            Updates the shadow size.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.CreateHandle">
            <summary>
            Creates the handle for this window.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DestroyHandle">
            <summary>
            Destroys the handle of this window.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="e">The current mouse location.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is moved.
            </summary>
            <param name="e">The mouse event info.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse button is released.
            </summary>
            <param name="e">The mouse event info.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the window background is painted.
            </summary>
            <param name="e">The graphics object to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the window is painted.
            </summary>
            <param name="e">The graphics object to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the shadow onto the specified graphics canvas.
            </summary>
            <param name="g">The graphics canvas to draw on.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the shadow onto the specified graphics canvas.
            </summary>
            <param name="g">The graphics canvas to draw on.</param>
            <param name="location">The location at which to draw the shadow image.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the form onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the form onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the form onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Called when a message is sent to the window.
            </summary>
            <param name="m">The message that was sent to the window.</param>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.UpdateShadow">
            <summary>
            Updates the shadow.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.UpdateShadowInner">
            <summary>
            Updates the shadow.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DropShadowForm.Dispose(System.Boolean)">
            <summary>
            Called when the form is disposed.
            </summary>
            <param name="disposing">Whether to dispose managed resources as well.</param>
        </member>
        <member name="T:System.Windows.Forms.Layout.DummyLayoutEngine">
            <summary>
            Represents a dummy layout engine that does not do anything.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.Layout.DummyLayoutEngine.Instance">
            <summary>
            A shared instance of the dummy layout engine.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Layout.DummyLayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Does absolutely nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Layout.DummyLayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does absolutely nothing.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.ChildSkip">
            <summary>
            Specifies which child controls to skip when searching for controls at a point.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ChildSkip.None">
            <summary>
            Do not skip any child controls.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ChildSkip.Invisible">
            <summary>
            Skip invisible child windows.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ChildSkip.Disabled">
            <summary>
            Skip disabled child windows.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ChildSkip.Transparent">
            <summary>
            Skip transparent child windows.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ChildSkip.DontRespondToMouse">
            <summary>
            Skip controls that don't respond to mouse clicks (return HTTRANPARENT when sent WM_NCHITTEST).
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DisposeOptions">
            <summary>
            Specifies the dispose options for the form.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DisposeOptions.None">
            <summary>
            Does not dispose anything.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DisposeOptions.FormOnly">
            <summary>
            Disposes of the form only.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DisposeOptions.FullDisposal">
            <summary>
            Disposes of every resource used by the form as well. Only use this if you want to kill the form completely.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DisposeFormEventArgs">
            <summary>
            Contains the options flag that is used to specify form disposal mode.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DisposeFormEventArgs.DisposeMode">
            <summary>
            The options flag that is used to specify form disposal mode.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DisposeFormEventArgs.#ctor(System.Windows.Forms.DisposeOptions)">
            <summary>
            Initializes a new DisposeFormEventArgs instance.
            </summary>
            <param name="disposeMode">The options flag that is used to specify form disposal mode.</param>
        </member>
        <member name="T:System.Windows.Forms.FilePrompt">
            <summary>
            Asks the user to select a file/folder.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.FilePrompt.LastPath">
            <summary>
            The last valid path that was browsed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.AppendExtension">
            <summary>
            Gets or sets whether to append file extension when saving file if it is missing.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.Multiselect">
            <summary>
            Gets or sets whether to allow selection of multiple files.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.AllFilesString">
            <summary>
            Gets or sets the All Files string (default: "All Files (*.*)").
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.ButtonText">
            <summary>
            Gets or sets the text that appears on the selection button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.Open">
            <summary>
            Set to true to select an existing file, false for saving or for suppressing file existence checks.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.WarnOverwrite">
            <summary>
            Gets or sets whether to show a warning before attempting to overwrite file.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.SelectDirectory">
            <summary>
            Gets or sets whether to select a directory or a file.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.Title">
            <summary>
            Gets or sets the FilePrompt text. You can use Text instead.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.FileName">
            <summary>
            Gets or sets the selected file name.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.FileNames">
            <summary>
            Gets or sets the selected file names.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FilePrompt.Filter">
            <summary>
            Only shows the specified file extensions. For example: "Jpeg Images|jpg|Text Files|txt;doc".
            "All Files" is added automatically.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.#ctor">
            <summary>
            Initializes a new open file prompt using default values.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.#ctor(System.Boolean,System.String,System.Boolean)">
            <summary>
            Initializes a new file prompt using the specified file extension filter.
            </summary>
            <param name="open">True to select an existing file, false for saving or for suppressing file existence checks.</param>
            <param name="filter">The filter to use (can be null).</param>
            <param name="selectDirectory">Whether to select a directory instead of a file.</param>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.SetVisibleCore(System.Boolean)">
            <summary>
            Sets whether the prompt is visible.
            </summary>
            <param name="value">The visibility flag.</param>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.OnShown(System.EventArgs)">
            <summary>
            Called when the file prompt is shown.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.SelectPath(System.String)">
            <summary>
            Selects the specified path in the tree-view.
            </summary>
            <param name="path">The path to try to select.</param>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.OnDisposing(System.Windows.Forms.DisposeFormEventArgs)">
            <summary>
            Called when the window is being disposed.
            </summary>
            <param name="e">Whether managed resources are about to be disposed.</param>
        </member>
        <member name="M:System.Windows.Forms.FilePrompt.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.FindAndReplace">
            <summary>
            A standard simple find-and-replace dialog.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.FindAndReplace.FindNextDownClick">
            <summary>
            Fired when the "Find Next ↓" button is clicked.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.FindAndReplace.FindNextUpClick">
            <summary>
            Fired when the "Find Next ↑" button is clicked.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.FindAndReplace.ReplaceNextDownClick">
            <summary>
            Fired when the "Replace Next ↓" button is clicked.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.FindAndReplace.ReplaceNextUpClick">
            <summary>
            Fired when the "Replace Next ↑" button is clicked.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.FindAndReplace.ReplaceAllClick">
            <summary>
            Fired when the "Replace All" button is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FindAndReplace.MatchCase">
            <summary>
            Gets whether the "Match Case" option is ticked.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FindAndReplace.MatchWord">
            <summary>
            Gets whether the "Match Word" option is ticked.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FindAndReplace.FindTextBoxContent">
            <summary>
            Gets or sets the content of the 'find' text field.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.FindAndReplace.ReplaceTextBoxContent">
            <summary>
            Gets or sets the content of the 'replace' text field.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.FindAndReplace.#ctor">
            <summary>
            Initializes a new find-and-replace dialog.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.FindAndReplace.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initializes a new find-and-replace dialog.
            </summary>
            <param name="owner">The owner of the dialog.</param>
        </member>
        <member name="M:System.Windows.Forms.FindAndReplace.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new find-and-replace dialog
            </summary>
            <param name="container">The container to add this dialog to.</param>
        </member>
        <member name="M:System.Windows.Forms.FindAndReplace.OnShown(System.EventArgs)">
            <summary>
            Called when the window is shown
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.FindAndReplace.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.TouchEventArgs">
            <summary>
            The event argument for a touch event.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TouchEventArgs.ID">
            <summary>
            Identifies the ID of the event. It is consistent across the corresponding TouchDown, TouchMove and TouchUp events.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TouchEventArgs.Bounds">
            <summary>
            The bounds of the touch event
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TouchEventArgs.Primary">
            <summary>
            Whether the touch event corresponds to a primary/initial/first contact point
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TouchEventArgs.IsPalm">
            <summary>
            Whether the touch event was caused by palm contact to the screen
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TouchEventArgs.#ctor(System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Initializes a touch event description.
            </summary>
            <param name="id">Identifies the ID of the event. It is consistent across the corresponding TouchDown, TouchMove and TouchUp events.</param>
            <param name="bounds">The bounds of the touch event</param>
            <param name="primary">Whether the touch event corresponds to a primary/initial/first contact point</param>
            <param name="isPalm">Whether the touch event was caused by palm contact to the screen</param>
        </member>
        <member name="T:System.Windows.Forms.GoToDialog">
            <summary>
            A simple go-to-line prompt dialog.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.GoToDialog.Label">
            <summary>
            The label showing: "Line:".
            </summary>
        </member>
        <member name="F:System.Windows.Forms.GoToDialog.NumericUpDown">
            <summary>
            The line number.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.GoToDialog.Button">
            <summary>
            The OK button.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.GoToDialog.#ctor">
            <summary>
            Initializes the go to dialog.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.GoToDialog.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes the go to dialog.
            </summary>
            <param name="container">The container to add this dialog to.</param>
        </member>
        <member name="M:System.Windows.Forms.GoToDialog.OnShown(System.EventArgs)">
            <summary>
            Called when the dialog is shown.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.GoToDialog.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.HotkeyListener">
            <summary>
            A C# API Layer for handling global hotkeys.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.HotkeyListener.HotkeyPressed">
            <summary>
            Fired when the registered hotkey combination is pressed. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.HotkeyListener.Enabled">
            <summary>
            Gets or sets whether the hotkey listener is enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.HotkeyListener.RegisterHotKey(System.Windows.Forms.Hotkey)">
            <summary>
            Registers the specified hotkey.
            </summary>
            <param name="hotkey">The hotkey to register.</param>
        </member>
        <member name="M:System.Windows.Forms.HotkeyListener.UnregisterHotKey(System.Windows.Forms.Hotkey)">
            <summary>
            Unregisters the specified hotkey.
            </summary>
            <param name="hotkey">The hotkey to unregister.</param>
        </member>
        <member name="T:System.Windows.Forms.IItemRenderer">
            <summary>
            Represents an item renderer.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IItemRenderer.ItemRenderer">
            <summary>
            Gets the renderer used for styling items.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.ImageMessageBox">
            <summary>
            Shows an image message box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.Show(System.Drawing.Image,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="image">The image to show.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.ShowAsync(System.Drawing.Image,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="image">The image to show.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.Show(System.Drawing.Image,System.Drawing.Image,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="imageLeft">The image to show on the left.</param>
            <param name="imageRight">The image to show on the right.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.ShowAsync(System.Drawing.Image,System.Drawing.Image,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="imageLeft">The image to show on the left.</param>
            <param name="imageRight">The image to show on the right.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.Show(System.Drawing.PixelWorker,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="image">The image to show.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.ShowAsync(System.Drawing.PixelWorker,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="image">The image to show.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.Show(System.Drawing.PixelWorker,System.Drawing.PixelWorker,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="imageLeft">The image to show on the left.</param>
            <param name="imageRight">The image to show on the right.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.ShowAsync(System.Drawing.PixelWorker,System.Drawing.PixelWorker,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="imageLeft">The image to show on the left.</param>
            <param name="imageRight">The image to show on the right.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.Show(System.String,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="imagePath">The path to the image to show.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.ShowAsync(System.String,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="imagePath">The path to the image to show.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.Show(System.String,System.String,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="leftImagePath">The path to the image to show on the left.</param>
            <param name="rightImagePath">The path to the image to show on the right.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.ShowAsync(System.String,System.String,System.String,System.String,System.Windows.Forms.ImageLayout,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Shows an image message box using the specified parameters.
            </summary>
            <param name="leftImagePath">The path to the image to show on the left.</param>
            <param name="rightImagePath">The path to the image to show on the right.</param>
            <param name="text">The text in the caption of the image.</param>
            <param name="title">The text in the title bar of the message box.</param>
            <param name="layout">The layout to use to represent the image.</param>
            <param name="interpolation">The interpolation method to use.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.StyledImgMsgBox.OnDisposing(System.Windows.Forms.DisposeFormEventArgs)">
            <summary>
            Called when the window is being disposed.
            </summary>
            <param name="e">Whether managed resources are about to be disposed.</param>
        </member>
        <member name="M:System.Windows.Forms.ImageMessageBox.StyledImgMsgBox.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.KeyListener">
            <summary>
            A C# API Layer for a global key hook.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.KeyListener.ConsumeEvent">
            <summary>
            If true, the current/next event is consumed and won't propogate any further.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.KeyListener.KeyEventHandler">
            <summary>
            Delegates the method called on key event.
            </summary>
            <param name="value">The key involved represented as a string.</param>
            <param name="isChar">Whether the key involved is a character key.</param>
            <param name="key">The key involved.</param>
        </member>
        <member name="E:System.Windows.Forms.KeyListener.KeyPress">
            <summary>
            Fired when a key is pressed. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.KeyListener.KeyRelease">
            <summary>
            Fired when a key is released. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.KeyListener.CalledFromHook">
            <summary>
            Gets whether the currently executing code is within a global callback hook.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.KeyListener.Enabled">
            <summary>
            Gets or sets whether the key press hook is enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.KeyListener.IsKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Gets whether the specified key is currently pressed.
            </summary>
            <param name="key">The key to check.</param>
        </member>
        <member name="M:System.Windows.Forms.KeyListener.IsKeyToggled(System.Windows.Forms.Keys)">
            <summary>
            Gets whether the specified key is toggled (ie. pressed and released back to back).
            </summary>
            <param name="key">The key to check.</param>
        </member>
        <member name="T:System.Windows.Forms.LinkLabelCustomCursor">
            <summary>
            A link label that exposes the ability to override cursor when hovering over link.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.LinkLabelCustomCursor.LinkCursor">
            <summary>
            Gets or sets the cursor to use when hovering over a link.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.LinkLabelCustomCursor.#ctor">
            <summary>
            Initializes the link label.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.LinkLabelCustomCursor.#ctor(System.String)">
            <summary>
            Initializes the link label using the specified text.
            </summary>
            <param name="text">The text to initialize the label with.</param>
        </member>
        <member name="M:System.Windows.Forms.LinkLabelCustomCursor.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the event when the mouse moves.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.MessageLoop">
            <summary>
            Creates and handles message loops as a better alternative to the Application class.
            The Application class events will still be fully functional.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MessageLoop.MessageLoopCount">
            <summary>
            Gets the total number of message loops currently running in the application.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MessageLoop.MessageLoopStarted">
            <summary>
            Gets whether a message loop was started on this thread.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.ProcessMessage(System.Platforms.Windows.MSG@)">
            <summary>
            Processes the specified message accordingly.
            </summary>
            <param name="message">The message that was received.</param>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.DoEvents">
            <summary>
            Processes all Windows messages currently in the message queue and returns true if any event was found.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.Run(System.Boolean)">
            <summary>
            Starts a message loop on this thread.
            </summary>
            <param name="checkMessageLoop">If true, a modal loop is not started if it already exists.</param>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.Run(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Starts a message loop on this thread and shows the specified form, and disposes it after use.
            </summary>
            <param name="form">Shows the specified form and starts a message loop.</param>
            <param name="dispose">If true, the form will be disposed after being shown.</param>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.ShowDialog(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Shows the specified form as dialog.
            </summary>
            <param name="form">Shows the specified form and starts a message loop.</param>
            <param name="dispose">If true, the form will be disposed after being shown.</param>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.ExitThread">
            <summary>
            Exits the message loop on this current thread.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.MessageLoop.Exit">
            <summary>
            Exits the message loops of all threads.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.MessageLoop.FilterInvoker`2">
            <summary>
            Here be poisonous dragons!!!
            </summary>
        </member>
        <member name="T:System.Windows.Forms.MessageLoopResult">
            <summary>
            Represents the current message loop state.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageLoopResult.None">
            <summary>
            No message was found.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageLoopResult.MessageFound">
            <summary>
            One or more messages were found and processed.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageLoopResult.Quitting">
            <summary>
            Messages were found and WM_QUIT was received.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.MouseListener">
            <summary>
            A C# API Layer for a global mouse hook.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MouseListener.Empty">
            <summary>
            An empty mouse event.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MouseListener.Sender">
            <summary>
            The empty sender object.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MouseListener.ConsumeEvent">
            <summary>
            If true, the current/next mouse event is consumed and won't propogate any further.
            Set to true if you change the cursor coordinates in a hook callback.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.DisableTouchMouseEvents">
            <summary>
            Gets or sets whether to disable auto-generated mouse events caused by touch input.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.MouseListener.MouseDown">
            <summary>
            Fired when a mouse button is pressed. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.MouseListener.CursorMove">
            <summary>
            Fired when the mouse is cursor has moved on screen. 'e' will hold the screen cursor position.
            Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.MouseListener.MouseMove">
            <summary>
            Fired when the mouse has physically been moved irrespective of cursor movement and display bounds. 'e' will hold the unbounded cursor position.
             Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.MouseListener.MouseUp">
            <summary>
            Fired when a mouse button is released. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.MouseListener.MouseWheel">
            <summary>
            Fired when a mouse wheel is scrolled. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.MouseListener.MouseDoubleClick">
            <summary>
            Fired when a mouse button is double-clicked. Duplicate (same method) subscriptions are ignored.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.CalledFromHook">
            <summary>
            Gets whether the currently executing code is within a global callback hook.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.LastMouseEvent">
            <summary>
            Gets the last native mouse event.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.State">
            <summary>
            Gets the current mouse state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.LastCursorMovement">
            <summary>
            Gets the last cursor movement offset vector (bounded by display size, can be 0).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.LastMouseMovement">
            <summary>
            Gets the last mouse movement offset vector (not bounded by display size).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.MouseListener.Enabled">
            <summary>
            Whether the key press hook is enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.MouseListener.IsButtonDown(System.Windows.Forms.MouseButtons)">
            <summary>
            Gets whether the specified button is currently pressed.
            </summary>
            <param name="button">The button to check.</param>
        </member>
        <member name="M:System.Windows.Forms.MouseListener.IsButtonToggled(System.Windows.Forms.MouseButtons)">
            <summary>
            Gets whether the specified button is toggled (ie. pressed and released back to back).
            </summary>
            <param name="button">The button to check.</param>
        </member>
        <member name="M:System.Windows.Forms.MouseListener.GetButtonsPressed">
            <summary>
            Gets the mouse buttons that are currently pressed.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.NewRichTextBox">
            <summary>
            A RichTextBox instance that uses newer API.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.NewRichTextBox.CreateParams">
            <summary>
            Specifies that the RichTextBox instance should use RichEdit50W API instead of the old RichEdit20W.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.NewRichTextBox.#ctor">
            <summary>
            Initializes a RichTextBox instance that uses RichEdit50W API instead of the old RichEdit20W.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.NewRichTextBox.#ctor(System.String)">
            <summary>
            Initializes a NewRichTextBox with the specified text.
            </summary>
            <param name="text">The text to initialize the RichTextBox with.</param>
        </member>
        <member name="M:System.Windows.Forms.NewRichTextBox.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.Notepad">
            <summary>
            A notepad application for C#.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Notepad.TextBox">
            <summary>
            The main text box of the Notepad window.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Notepad.#ctor">
            <summary>
            Initializes a new blank notepad instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Notepad.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new slider dialog.
            </summary>
            <param name="container">The container to add this dialog to.</param>
        </member>
        <member name="M:System.Windows.Forms.Notepad.#ctor(System.String)">
            <summary>
            Initializes a notepad instance from the specified file/text.
            </summary>
            <param name="parameter">The text/file to show in the text box.</param>
        </member>
        <member name="M:System.Windows.Forms.Notepad.ConstructObject">
            <summary>
            Consutructs the window.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Notepad.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Called when a key is about to be processed.
            </summary>
            <param name="msg">The related message.</param>
            <param name="keyData">The keys that were pressed.</param>
        </member>
        <member name="M:System.Windows.Forms.Notepad.OnQueryClose(System.Windows.Forms.CloseReason)">
            <summary>
            Called when the window is being closed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Notepad.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Notepad.OnDisposing(System.Windows.Forms.DisposeFormEventArgs)">
            <summary>
            Called when the window is being disposed.
            </summary>
            <param name="e">Whether managed resources are about to be disposed.</param>
        </member>
        <member name="T:System.Windows.Forms.ProcessEventArgs">
            <summary>
            The ProcessEventArgs are arguments for a console event.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ProcessEventArgs.Content">
            <summary>
            Gets the content.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ProcessEventArgs.ExitCode">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="M:System.Windows.Forms.ProcessEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ProcessEventArgs"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ProcessEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ProcessEventArgs"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ProcessEventArgs"/> class.
            </summary>
            <param name="exitCode">The exit code.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessEventArgs.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ProcessEventArgs"/> class.
            </summary>
            <param name="content">The content.</param>
            <param name="exitCode">The exit code.</param>
        </member>
        <member name="T:System.Windows.Forms.ProcessInterface">
            <summary>
            A class the wraps a process, allowing programmatic input and output.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.ProcessInterface.ProcessEventHandler">
            <summary>
            A ProcessEventHandler is a delegate for process input/output events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.Forms.ProcessEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.process">
            <summary>
            The underlying process.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.inputWriter">
            <summary>
            The input writer.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.outputReader">
            <summary>
            The output reader.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.errorReader">
            <summary>
            The error reader.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.outputWorker">
            <summary>
            The output worker.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.errorWorker">
            <summary>
            The error worker.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.processFileName">
            <summary>
            Current process file name.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.ProcessInterface.processArguments">
            <summary>
            Arguments sent to the current process.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ProcessInterface.ProcessOutput">
            <summary>
            Occurs when process output is produced.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ProcessInterface.ProcessError">
            <summary>
            Occurs when process error output is produced.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ProcessInterface.ProcessInput">
            <summary>
            Occurs when process input is produced.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.ProcessInterface.ProcessExit">
            <summary>
            Occurs when the process ends.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ProcessInterface.IsProcessRunning">
            <summary>
            Gets a value indicating whether this instance is process running.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ProcessInterface.Process">
            <summary>
            Gets the process.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.ProcessInterface.ProcessFileName">
            <summary>
            Gets the name of the process.
            </summary>
            <value>
            The name of the process.
            </value>
        </member>
        <member name="P:System.Windows.Forms.ProcessInterface.ProcessArguments">
            <summary>
            Gets the process arguments.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Forms.ProcessInterface"/> class.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.outputWorker_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Handles the ProgressChanged event of the outputWorker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.outputWorker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Handles the DoWork event of the outputWorker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.errorWorker_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Handles the ProgressChanged event of the errorWorker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.errorWorker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Handles the DoWork event of the errorWorker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.StartProcess(System.String,System.String)">
            <summary>
            Runs a process.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.StopProcess">
            <summary>
            Stops the process.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.currentProcess_Exited(System.Object,System.EventArgs)">
            <summary>
            Handles the Exited event of the currentProcess control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.RaiseProcessEvent(System.Windows.Forms.ProcessInterface.ProcessEventHandler,System.Windows.Forms.ProcessEventArgs)">
            <summary>
            Fires the process output event.
            </summary>
            <param name="handler">The event to fire.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:System.Windows.Forms.ProcessInterface.WriteInput(System.String)">
            <summary>
            Writes the input.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="T:System.Windows.Forms.SliderDialog">
            <summary>
            A simple slider dialog prompt dialog.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.SliderDialog.StyledSlider">
            <summary>
            The silder used with this instance.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.SliderDialog.Button">
            <summary>
            The OK button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.SliderDialog.AllowValuesOutsideRange">
            <summary>
            Gets or sets whether to remove the restriction on the value that can be written in the text box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.SliderDialog.Value">
            <summary>
            Gets the current value of the slider.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SliderDialog.#ctor">
            <summary>
            Initializes a new slider dialog.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SliderDialog.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new slider dialog.
            </summary>
            <param name="container">The container to add this dialog to.</param>
        </member>
        <member name="M:System.Windows.Forms.SliderDialog.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new slider dialog.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="value">The current value.</param>
        </member>
        <member name="M:System.Windows.Forms.SliderDialog.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new slider dialog.
            </summary>
            <param name="text">The text to show next to the slider.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="value">The current value.</param>
            <param name="increment">The increments supported by the slider (ex. 0 for no limit, 1 for whole numbers, 2 for even numbers...).</param>
            <param name="allowValuesOutsideRange">Whether to remove the restriction on the value that can be written in the text box.</param>
        </member>
        <member name="M:System.Windows.Forms.SliderDialog.OnShown(System.EventArgs)">
            <summary>
            Called when the dialog is shown.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.SliderDialog.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.SplashForm">
            <summary>
            Initializes a new splash form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.SplashForm.FadingOut">
            <summary>
            Gets whether the closing animation is being played.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.SplashForm.IsLeftMouseDown">
            <summary>
            Gets whether the splash screen is being moved.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.SplashForm.CreateParams">
            <summary>
            Adds a drop-shadow effect.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a splash screen showing the specified image.
            </summary>
            <param name="background">The image to show.</param>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is pressed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is moved.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is released.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnShown(System.EventArgs)">
            <summary>
            Called when the splash screen is shown.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the splash screen is painted.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Called when the splash screen is being closed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Called when the splash screen is closed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.SplashForm.ShowSplash(System.Drawing.Image,System.Boolean)">
            <summary>
            Starts a splash screen on a seperate thread.
            </summary>
            <param name="background">The background image of the splash screen.</param>
            <param name="onSeparateThread">Whether to run the splash screen on a separate thread.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledArrowButton">
            <summary>
            A styled arrow-shaped button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.Label">
            <summary>
            Gets the label that renders the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.Renderer">
            <summary>
            Gets the renderer used for styling.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.NormalTextColor">
            <summary>
            Gets or sets the text color to use when the button is in normal state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.HoverTextColor">
            <summary>
            Gets or sets the text color to use when the button is in hovered state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.PressedTextColor">
            <summary>
            Gets or sets the text color to use when the button is in pressed state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.Text">
            <summary>
            Gets or sets the text to show in the button label.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.Rotation">
            <summary>
            Gets or sets the arrow button pointing direction in degrees.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledArrowButton.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.#ctor">
            <summary>
            Initializes an arrow button.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.#ctor(System.String)">
            <summary>
            Initializes the arrow button with the specified text.
            </summary>
            <param name="text">The text to initialize the button width.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding has been changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnSizeChanged(System.EventArgs)">
            <summary>
            Called when the size has been changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Fired when the mouse enters the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Fired when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is pressed on the control.
            </summary>
            <param name="mevent">The mouse event args.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is moved.
            </summary>
            <param name="mevent">The mouse event args.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse is released on the control.
            </summary>
            <param name="mevent">The mouse event args.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Fired when a key is released.
            </summary>
            <param name="e">The key event args.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnBackColorChanged(System.EventArgs)">
            <summary>
            Called when the backcolor is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the button on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the arrow button on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="location">The coordinates to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the arrow button.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.RotateTextToMatchArrow">
            <summary>
            Rotates the text in the label to match the arrow direction in the most readable manner possible.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledArrowButton.Dispose(System.Boolean)">
            <summary>
            Called when the button is disposed.
            </summary>
            <param name="disposing">Whether Dispose() was called manually or automatically.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledButton">
            <summary>
            A customizable styled button.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledButton.ImageChanged">
            <summary>
            Fired when the image has been changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledButton.IconChanged">
            <summary>
            Fired when the icon has been changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledButton.CheckStateChanged">
            <summary>
            Fired when the check state is changed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.CheckBox">
            <summary>
            Gets the checkbox that renders the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Icon">
            <summary>
            Gets or sets the icon to show on the left of the item. Icon takes precendence over Image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Renderer">
            <summary>
            Gets the renderer used for styling.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.NormalTextColor">
            <summary>
            Gets or sets the text color to use when the button is in normal state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.HoverTextColor">
            <summary>
            Gets or sets the text color to use when the button is in hovered state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.PressedTextColor">
            <summary>
            Gets or sets the text color to use when the button is in pressed state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.NormalInnerBorderWidth">
            <summary>
            Gets or sets the normal inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.FocusInnerBorderWidth">
            <summary>
            Gets or sets the focused inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Text">
            <summary>
            Gets or sets the text to show in the button label.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Image">
            <summary>
            Gets or sets the button image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.CheckState">
            <summary>
            Gets or sets the check-state of the check box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Checked">
            <summary>
            Gets or sets whether the check box is checked or not.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.TextAlign">
            <summary>
            Gets or sets the text alignment within the control.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.DefaultPadding">
            <summary>
            Gets the default item padding (3 pixels from every edge).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.CheckOnClick">
            <summary>
            Gets or sets whether the item is checked when it is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.ShowCheckBox">
            <summary>
            Gets or sets whether a checkbox is shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.AddPaddingRegardless">
            <summary>
            Gets or sets whether to add checkbox padding to the control for context menu alignment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledButton.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.#ctor">
            <summary>
            Initializes the styled button.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.#ctor(System.String)">
            <summary>
            Initializes the styled button with the specified text.
            </summary>
            <param name="text">The text to initialize the button width.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnImageChanged(System.EventArgs)">
            <summary>
            Called when the image has been changed.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnIconChanged(System.EventArgs)">
            <summary>
            Called when the icon has been changed.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.GetAutoSize">
            <summary>
            Gets the resultant size of the button if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding has been changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.GetAutoSize(System.Drawing.Size,System.Boolean)">
             <summary>
             Gets the resultant size of the button if it were to be auto-sized with both grow and shrink enabled.
             </summary>
             <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">If true, padding is included within the size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the button background (unimplemented).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Fired when the mouse enters the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Fired when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is pressed on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is moved.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse is released on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnCheckStateChanged(System.Windows.Forms.CheckState)">
            <summary>
            Fired when the check state is changed.
            </summary>
            <param name="state">The new check-state.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Fired when auto-size is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.FitToContent">
            <summary>
            Sets the size of the control to the autosize result.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnGotFocus(System.EventArgs)">
            <summary>
            Fires when the button got input focus.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnLostFocus(System.EventArgs)">
            <summary>
            Fires when the button lost input focus.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnSizeChanged(System.EventArgs)">
            <summary>
            Called when the size is changed.
            </summary>
            <param name="e">Nothing.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when a key is pressed.
            </summary>
            <param name="kevent">The key event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when a key is released.
            </summary>
            <param name="kevent">The key event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the button on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the button on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="location">The coordinates to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the control is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the control.</param>
            <param name="height">The new height of the control.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the button.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledButton.Dispose(System.Boolean)">
            <summary>
            Called when the button is being disposed.
            </summary>
            <param name="disposing">True to dispose managed resources.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledCheckBox">
            <summary>
            A customizable styled check box.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledCheckBox.CheckStateChanged">
            <summary>
            Fired when the check state is changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledCheckBox.ImageChanged">
            <summary>
            Fired when the image has been changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledCheckBox.IconChanged">
            <summary>
            Fired when the icon has been changed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Label">
            <summary>
            Gets the label that renders the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.CheckOnClick">
            <summary>
            Gets or sets whether the checkbox is checked when it is clicked/pressed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.ShowCheckBox">
            <summary>
            Gets or sets whether the checkbox is shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.AddPaddingRegardless">
            <summary>
            Gets or sets whether checkbox padding is added regardless if the checkbox is shown or not.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Image">
            <summary>
            Gets or sets the image to show instead of a checkbox. Icon takes precendence over Image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Icon">
            <summary>
            Gets or sets the icon to show instead of a checkbox. Icon takes precendence over Image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.IsRadioButton">
            <summary>
            Gets or sets whether the checkbox is rendered as a radio button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Renderer">
            <summary>
            Gets the renderer used for styling.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.NormalInnerBorderWidth">
            <summary>
            Gets or sets the normal inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.FocusInnerBorderWidth">
            <summary>
            Gets or sets the focused inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.HasFocus">
            <summary>
            Gets whether the check box has input focus.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Text">
            <summary>
            Gets or sets the text to show in the check box label.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.CheckState">
            <summary>
            Gets or sets the check-state of the check box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.Checked">
            <summary>
            Gets or sets whether the check box is checked or not.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.TextAlign">
            <summary>
            Gets or sets the alignment the checkbox.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledCheckBox.AutoSize">
            <summary>
            Gets or sets whether the checkbox should be auto-sized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.#ctor">
            <summary>
            Initializes the styled check box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.#ctor(System.String)">
            <summary>
            Initializes the styled check box using the specified text.
            </summary>
            <param name="text">The initial check box text.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.GetCheckBoxSize">
            <summary>
            Gets the size of the check box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.GetCheckBoxSize(System.Windows.Forms.StyledLabel)">
            <summary>
            Calculates the check box size that would be associated the specified label.
            </summary>
            <param name="label">The label to calculate the size of the check box from.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.GetAutoSize">
            <summary>
            Gets the resultant size of the checkbox control if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.GetAutoSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Gets the resultant size of the checkbox control if it were to be auto-sized with both grow and shrink enabled.
            </summary>
            <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">If true, padding is included within the size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the control is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the control.</param>
            <param name="height">The new height of the control.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.RefreshLayout">
            <summary>
            Rearranges the layout of the checkbox and label appropriately within the control bounds.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnImageChanged(System.EventArgs)">
            <summary>
            Called when the image has been changed.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnIconChanged(System.EventArgs)">
            <summary>
            Called when the icon has been changed.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding of the control is changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Fired when auto-size is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.FitToContent">
            <summary>
            Sets the size of the control to the autosize result.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Called when the backcolor is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnCheckStateChanged(System.Windows.Forms.CheckState)">
            <summary>
            Fired when the check state is changed.
            </summary>
            <param name="state">The new check-state.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Fired when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is pressed on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is moved.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse is released on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Fired when a key is released on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnGotFocus(System.EventArgs)">
            <summary>
            Fired when the check box gets input focus.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnLostFocus(System.EventArgs)">
            <summary>
            Fires when the check box loses input focus.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the check box on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the check box on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the check box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledCheckBox.Dispose(System.Boolean)">
            <summary>
            Called when the checkbox is being disposed.
            </summary>
            <param name="disposing">Whether to dispose managed resources.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledComboBox">
            <summary>
            A customizable styled combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.Label">
            <summary>
            Gets the label that renders the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.Renderer">
            <summary>
            Gets the renderer used for styling.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.NormalTextColor">
            <summary>
            Gets or sets the text color to use when the combo box is in normal state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.HoverTextColor">
            <summary>
            Gets or sets the text color to use when the combo box is in hovered state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.PressedTextColor">
            <summary>
            Gets or sets the text color to use when the combo box is in pressed state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.NormalInnerBorderWidth">
            <summary>
            Gets or sets the normal inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.FocusInnerBorderWidth">
            <summary>
            Gets or sets the focused inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.HasFocus">
            <summary>
            Gets whether the combo box has input focus.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.Text">
            <summary>
            Gets or sets the text to show in the combo box label.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.AutoSize">
            <summary>
            Gets or sets whether to use AutoSize on the combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.DefaultPadding">
            <summary>
            Gets the default item padding (3 pixels from every edge).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.Items">
            <summary>
            Gets a list of the items that are loaded in the context menu.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.SelectedText">
            <summary>
            Gets or sets the string shown by the combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.SelectedItem">
            <summary>
            Gets or sets the string shown by the combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.SelectedValue">
            <summary>
            Gets or sets the string shown by the combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.SelectedIndex">
            <summary>
            Gets or sets the index that is selected.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledComboBox.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.#ctor">
            <summary>
            Initializes the styled combo box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.#ctor(System.String)">
            <summary>
            Initializes the styled combo box with the specified text.
            </summary>
            <param name="text">The text to initialize the combo box width.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.AddItem(System.String)">
            <summary>
            Adds the specified item to the combo box.
            </summary>
            <param name="item">The item to add to the combo box.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.AddItem(System.Windows.Forms.StyledItem)">
            <summary>
            Adds the specified item to the combo box.
            </summary>
            <param name="item">The item to add to the combo box.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.RemoveItem(System.Windows.Forms.StyledItem)">
            <summary>
            Removes the specified item from the combo box and returns whether it was found.
            </summary>
            <param name="item">The item to remove from the combo box.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.RemoveItem(System.String,System.Boolean)">
            <summary>
            Removes the specified item from the combo box and returns whether it was found.
            </summary>
            <param name="item">The item to remove from the combo box.</param>
            <param name="ignoreCase">Whether the item search is case sensitive.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.ClearItems">
            <summary>
            Removes all the items from the combo box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnVisibleChanged(System.EventArgs)">
            <summary>
            Called when the combo box is made visible.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Do not use.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.RefreshItem(System.Int32)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.RefreshItems">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.SetItemCore(System.Int32,System.Object)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.SetItemsCore(System.Collections.IList)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnClick(System.EventArgs)">
            <summary>
            Called when the dropdown menu is clicked.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.UpdateItemRenderer">
            <summary>
            Updates the item renderer of each sub-menu item to the value of ItemRenderer.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.GetAutoSize">
            <summary>
            Gets the resultant size of the combo box if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding has been changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.GetAutoSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Gets the resultant size of the combo box if it were to be auto-sized with both grow and shrink enabled.
            </summary>
            <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">If true, padding is included within the size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.FitToContent">
            <summary>
            Sets the size of the control to the autosize result.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the combo box background (unimplemented).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Fired when the mouse enters the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Fired when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is pressed on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is moved.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse is released on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Fired when auto-size is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnGotFocus(System.EventArgs)">
            <summary>
            Fires when the combo box got input focus.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnLostFocus(System.EventArgs)">
            <summary>
            Fires when the button lost input focus.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the combo box on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the combo box on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Called when a message needs to be processed by the control.
            </summary>
            <param name="m">The message to process.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the control is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the control.</param>
            <param name="height">The new height of the control.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the combo box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledComboBox.Dispose(System.Boolean)">
            <summary>
            Called when the combo box is being disposed.
            </summary>
            <param name="disposing">True to dispose managed resources.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledContextMenu">
            <summary>
            A customizable styled context menu.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledContextMenu.PaintBackground">
            <summary>
            Fired when the background of the control is about to be painted.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.SourceControl">
            <summary>
            Gets the last control that caused this context menu to be displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.MaxItemSize">
            <summary>
            Gets the maximum item size.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.FadingIn">
            <summary>
            Gets whether a fade-in animation is currently taking place.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.CreateParams">
            <summary>
            Adds a drop-shadow effect.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.Alignment">
            <summary>
            Gets or sets the alignment of each item.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.AutoSize">
            <summary>
            Gets or sets whether the context menu should automatically resize to fit its contents.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.AutoClose">
            <summary>
            Gets or sets whether the context menu should automatically close when the user clicks outside.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledContextMenu.ItemRenderer">
            <summary>
            Gets the renderer used for styling items.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.#ctor">
            <summary>
            Initializes the styled context menu.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes the styled context menu.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.SuspendLayout">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.ResumeLayout">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.ResumeLayout(System.Boolean)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.FitToContent">
            <summary>
            Updates the size of the context menu to fit its contents.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the control is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the control.</param>
            <param name="height">The new height of the control.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.GetAutoSize">
            <summary>
            Gets the resultant size of the context menu if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.GetAutoSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Gets the size of the context menu if it were to fit its contents.
            </summary>
            <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.SetVisibleCore(System.Boolean)">
            <summary>
            Called when the visibility of the conext menu is about to change.
            </summary>
            <param name="visible">Whether the context menu will be shown or not.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.UpdateRenderer">
            <summary>
            Updates the renderer by copying it to every item in the context menu.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnRendererChanged(System.EventArgs)">
            <summary>
            Updates the item renderer on each item to the value of Renderer.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)">
            <summary>
            Fired when an item is added to the context menu.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnItemRemoved(System.Windows.Forms.ToolStripItemEventArgs)">
            <summary>
            Fired when an item is removed from the context menu.
            </summary>
            <param name="e">The tool strip item that was removed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Does nothing.
            </summary>
            <param name="se">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnForeColorChanged(System.EventArgs)">
            <summary>
            Fired when the forecolor is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnFontChanged(System.EventArgs)">
            <summary>
            Fired when the font is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the context menu is being opened.
            </summary>
            <param name="e">Allows you to stop the context menu from being opened.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.CreateDefaultItem(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            Creates a StyledItem instance from the specified parameters.
            </summary>
            <param name="text">The text to show on the item.</param>
            <param name="image">The image to show on the item (can be null).</param>
            <param name="onClick">To be called when the item is clicked.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is pressed.
            </summary>
            <param name="mea">The mouse event parameters.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is moved.
            </summary>
            <param name="mea">The mouse event parameters.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is released.
            </summary>
            <param name="mea">The mouse event parameters.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.GetItemAt(System.Int32)">
            <summary>
            Gets the item at the specified y coordinate in the context menu.
            </summary>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.GetLocationOf(System.Int32)">
            <summary>
            Gets the Y-coordinate of the item at the specified index. Returns -1 if the index is invalid.
            </summary>
            <param name="index">The index of the item to get the Y-coordinate of.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes the specified keys.
            </summary>
            <param name="m">The associated message.</param>
            <param name="keyData">The keys that were pressed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Called when the the layout of the context menu is calculated.
            </summary>
            <param name="levent">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.RaisePaintEvent(System.Windows.Forms.PaintEventHandler,System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises a paint event.
            </summary>
            <param name="handler">The event to call.</param>
            <param name="sender">The sender that needs to be painted.</param>
            <param name="e">The PaintEventArgs containing the appropriate graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the context menu onto the specified graphics canvas.
            </summary>
            <param name="g">The canvas to draw the context menu on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the context menu onto the specified graphics canvas at the specified location.
            </summary>
            <param name="g">The canvas to draw the context menu on.</param>
            <param name="location">The location to draw the context menu at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawGdi(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Draws the context menu onto the specified graphics canvas at the specified location.
            </summary>
            <param name="g">The canvas to draw the context menu on.</param>
            <param name="location">The location to draw the context menu at.</param>
            <param name="invalidated">The client rectangle that was invalidated.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the context menu and its items.
            </summary>
            <param name="e">The graphics canvas to draw on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.OnClosing(System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            Called when the context menu is closing.
            </summary>
            <param name="e">The close reason.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledContextMenu.ToString">
            <summary>
            Gets a string that represents this instance.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.StyledForm">
            <summary>
            A styled window that is packed with features and is extremely customizable.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.initDummy">
            <summary>
            KEEP THIS ON TOP! (so that it is executed before other functions)
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.DesignMode">
            <summary>
            Gets whether the form is currently running in design mode.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.OpenStyledForms">
            <summary>
            A list of all styled forms that are currently open.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.closeButtonRenderer">
            <summary>
            The renderer that handles the styling of the close button.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.maximizeButtonRenderer">
            <summary>
            The renderer that handles the styling of the maximize button.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.minimizeButtonRenderer">
            <summary>
            The renderer that handles the styling of the minimize button.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.residentThread">
            <summary>
            The thread on which the control resides.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.BorderSyncLock">
            <summary>
            The locking object that is used to synchronize accesses to the border texture.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledForm.defaultBorder">
            <summary>
            Gets or sets the default active border texture.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledForm.PhysicalMouseMove">
            <summary>
            Fired when the mouse has physically been moved irrespective of cursor movement and display bounds.
            'e' will hold the unbounded cursor position in viewport coordinates.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.BackColorOpacity">
            <summary>
            Gets or sets the background color opacity. Only effective when aero blur is enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.SuppressClear">
            <summary>
            If true, the window background is not cleared before it is redrawn (not recommended). Use only if you plan to redraw the whole window
            yourself at a high refresh rate.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.EnableAeroBlur">
            <summary>
            Gets or sets whether to enable or disable the aero blur effect.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.BorderCursor">
            <summary>
            Gets or sets the default border cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ResidentThread">
            <summary>
            Gets the thread on which the control resides.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.InvokeRequired">
            <summary>
            Gets a value indicating whether the caller should call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.DpiScale">
            <summary>
            Gets the current form DPI scale multiplier.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.FullDisposeOnClose">
            <summary>
            If true, Dispose(DisposeOptions.FullDisposal) is called automatically after the form is closed.
            Set to true for main window forms that are present throughout the application lifetime.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ParentScreen">
            <summary>
            Gets the screen that contains the form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.TitleBarBadding">
            <summary>
            Gets or sets the padding to add around title bar borders (affects control buttons and icon bounds).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ActiveBorderOpacity">
            <summary>
            Gets or sets the border opacity when the window is active.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.InactiveBorderOpacity">
            <summary>
            Gets or sets the border opacity when the window is inactive.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ShowShadow">
            <summary>
            Gets or sets whether the shadow should be shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsBorderVisible">
            <summary>
            Gets whether the border is currently visible.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.SystemMenuStrip">
            <summary>
            If assigned a menu strip, it will be shown instead of the standard system menu when the taskbar is right-clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.SystemMenu">
            <summary>
            If assigned a menu strip, it will be shown instead of the standard system menu.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CloseButtonRenderer">
            <summary>
            Gets the renderer that handles the styling of the close button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.MaximizeButtonRenderer">
            <summary>
            Gets the renderer that handles the styling of the maximize button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.MinimizeButtonRenderer">
            <summary>
            Gets the renderer that handles the styling of the minimize button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.DefaultBorder">
            <summary>
            Gets or sets the default active border texture (or null to load default).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CloseBounds">
            <summary>
            Gets the current bounds of the close button (empty if the close button is not enabled).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.MaximizeBounds">
            <summary>
            Gets the current bounds of the maximize button (empty if the maximize button is not enabled).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.MinimizeBounds">
            <summary>
            Gets the current bounds of the minimize button (empty if the minimize button is not enabled).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ControlBoxBounds">
            <summary>
            Gets the current bounds of the control box (min, max and close combined).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.EnableFullscreenOnAltEnter">
            <summary>
            Gets or sets whether to enable fullscreen toggle on Alt+Enter.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CursorVisible">
            <summary>
            Gets or sets whether the cursor is visible on the form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ShowInTaskbar">
            <summary>
            Gets or sets whether to show the window icon on the taskbar.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.TitleLabel">
            <summary>
            Gets the title label.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Opacity">
            <summary>
            Gets or sets the opacity of the form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsDisposed">
            <summary>
            Gets whether the window is disposed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.EnableOpacityAnimation">
            <summary>
            Gets or sets whether to enable the fade in/out animation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.EnableMinimizeAnimation">
            <summary>
            Gets or sets whether to enable the minimize/restore animation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.EnableBorderAnimation">
            <summary>
            Gets or sets whether to enable the border active/inactive animation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.EnableResizeAnimation">
            <summary>
            Gets or sets whether to enable the maximize/fullscreen animation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.AnimatingBounds">
            <summary>
            Gets whether the bounds are currently being animated.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsMinimizing">
            <summary>
            Gets whether the minimize animation is currently in action.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsRestoring">
            <summary>
            Gets whether the restore from minimize animation is currently in action.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IconBounds">
            <summary>
            Gets the bounds of the icon area.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsGLEnabled">
            <summary>
            Gets whether the OpenGL context is currently enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CreateParams">
            <summary>
            Gets the parameters that define the initial window style.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.WindowCursor">
            <summary>
            Gets or sets the cursor icon that is used by default for the window.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.DefaultCursor">
            <summary>
            Gets the cursor that is currently set as default (use WindowCursor instead).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Cursor">
            <summary>
            Gets or sets the cursor of the form.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsResizable">
            <summary>
            Gets or sets whether the window is resizable.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsMaximized">
            <summary>
            Gets whether the window is maximized.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.FadeState">
            <summary>
            Gets whether a fade animation is currently taking place.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsMinimized">
            <summary>
            Gets whether the window is currently minimized.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Border">
            <summary>
            Gets or sets the border texture of the window. Be sure to use lock(BorderSyncLock) before using the bitmap or making any modifications to it.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Active">
            <summary>
            Gets whether the window is currently active.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.OutlineColor">
            <summary>
            Gets or sets the color of the window outline.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.InlineColor">
            <summary>
            Gets or sets the color of the window client area outline.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CloseEnabled">
            <summary>
            Gets or sets whether the close button is enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.MaximizeEnabled">
            <summary>
            Gets or sets whether the maximize button is enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.MinimizeEnabled">
            <summary>
            Gets or sets whether the minimize button is enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ShowBorder">
            <summary>
            Gets or sets whether to show the outer border.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.BorderWidth">
            <summary>
            Gets or sets the window border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.TitleBarHeight">
            <summary>
            Gets or sets the window title bar height.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsClosing">
            <summary>
            Gets whether the window is currently in the process of becoming closed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CurrentBorderWidth">
            <summary>
            Gets the current border width at this point in time (0 if the border is hidden, the window is maximized or fullscreen).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.CurrentTitleBarHeight">
            <summary>
            Gets the current title bar height at this point in time (0 if the border is hidden or the window is fullscreen).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ClientLocation">
            <summary>
            Gets the actual location of the window on the screen.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ViewPort">
            <summary>
            Gets or sets the window view port. This get the actual client area, taking all relevant window states into account.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ViewPortLocation">
            <summary>
            Gets or sets the window view port location. This get the actual client area location, taking all relevant window states into account.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ViewSize">
            <summary>
            Gets or sets the window view size. This get the actual client area size, taking all relevant window states into account.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.FullscreenGdiGLWorkaround">
            <summary>
            When using OpenGL and GDI+ controls on Windows, if the window is exactly the size of the screen,
            native GDI controls (not the OpenGL GDI layer) glitch out and vanish. If the workaround is enabled,
            at fullscreen, the height of the window is set to the height of the screen + 1.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.IsFullScreen">
            <summary>
            Gets or sets whether the window is fullscreen.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Visible">
            <summary>
            Gets or sets whether the form is visibly presented to the user.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.DefaultSize">
            <summary>
            Gets the default window size.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledForm.Text">
            <summary>
            Gets or sets the window caption text in the title bar.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new styled window instance.
            </summary>
            <param name="container">The container to add this form to.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.#ctor">
            <summary>
            Initializes a new styled window instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnConstructorStarted">
            <summary>
            Called when the constructor is about to start. This is called only once.
            Don't do anything fancy, almost everything is null or uninitialized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.InitApp">
            <summary>
            Performs preliminary configuration to ensure stability.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.BeginInvoke(System.Delegate)">
            <summary>
            Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.
            The InvocationData overload is much faster.
            </summary>
            <param name="method">A delegate to a method that takes no parameters. </param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.BeginInvoke(System.Delegate,System.Object[])">
            <summary>
            Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.
            The InvocationData overload is much faster.
            </summary>
            <param name="method">A delegate to a method that takes parameters of the same number and type that are contained in the args parameter.</param>
            <param name="args">An array of objects to pass as arguments to the given method. This can be null if no arguments are needed. </param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.BeginInvoke(System.Threading.Dispatch.InvocationData)">
            <summary>
            Asychronously invokes the specified method with the specified parameters.
            </summary>
            <param name="invocation">Holds the data required for an invocation.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invoke(System.Delegate)">
            <summary>
            Executes the specified delegate on the thread that owns the control's underlying window handle.
            The InvocationData overload is much faster.
            </summary>
            <param name="method">A delegate that contains a method to be called in the control's thread context. </param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invoke(System.Delegate,System.Object[])">
            <summary>
            Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.
            The InvocationData overload is much faster.
            </summary>
            <param name="method">A delegate to a method that takes parameters of the same number and type that are contained in the args parameter.</param>
            <param name="args">An array of objects to pass as arguments to the specified method. This parameter can be null if the method takes no arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invoke(System.Threading.Dispatch.InvocationData,System.Int32)">
            <summary>
            Invokes the specified method on the window's thread synchronously.
            </summary>
            <param name="invocation">Holds the data required for an invocation.</param>
            <param name="timeout">The invocation timeout. If the timeout is zero or smaller, the timeout is indefinite.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.CreateHandle">
            <summary>
            Creates the handle for this window.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DestroyHandle">
            <summary>
            Destroys the current window handle.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnHandleCreated(System.EventArgs)">
            <summary>
            Called when the form handle is created.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Called when the form handle is destroyed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invalidate(System.Boolean)">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
            <param name="invalidateChildren">If true, child controls are invalidated as well.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the specified region of the control (in viewport coordinates).</summary>
            <param name="rect">The region to invalidate in viewport coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Invalidate(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Invalidates the specified region of the control (in viewport coordinates).</summary>
            <param name="rect">The region to invalidate in viewport coordinates.</param>
            <param name="invalidateChildren">If true, child controls are invalidated as well.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Show">
            <summary>
            Shows the form to the user.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the form with the specified owner to the user.
            </summary>
            <param name="owner">The owner of the window.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ShowDialog">
            <summary>
            Shows the form as a modal dialog box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the form as a modal dialog box with the specified owner.
            </summary>
            <param name="owner">The owner of the window.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.SetVisibleNoAnimation(System.Boolean)">
            <summary>
            Sets the visible property to the specified value immediately without animating.
            </summary>
            <param name="value">Whether the form should now be visible.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Called whenever a child control is added to the form.
            </summary>
            <param name="e">The control that was added.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Called whenever a child control is removed from the form.
            </summary>
            <param name="e">The control that was added.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.RedrawBorder(System.Boolean)">
            <summary>
            Repaints the border.
            </summary>
            <param name="sync">Whether to wait for the painting to be complete.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.RedrawBorder(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Redraws the border.
            </summary>
            <param name="sync">Whether to wait for the painting to be complete.</param>
            <param name="rect">The invalidated bounds.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.IsPointInCloseButton(System.Drawing.Point)">
            <summary>
            Gets whether the specified point is considered to currently be inside the close button.
            </summary>
            <param name="point">The point to check in client-coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.IsPointInMaximizeButton(System.Drawing.Point)">
            <summary>
            Gets whether the specified point is considered to currently be inside the maximize button.
            </summary>
            <param name="point">The point to check in client-coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.IsPointInMinimizeButton(System.Drawing.Point)">
            <summary>
            Gets whether the specified point is considered to currently be inside the minimize button.
            </summary>
            <param name="point">The point to check in client-coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.IsPointInBorder(System.Drawing.Point)">
            <summary>
            Gets whether the specified client point is inside the border.
            </summary>
            <param name="point">The point to check in client coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.GetTargetBounds">
            <summary>
            Gets the bounds of the window, and if it is currently being animated, returns the target bounds.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.PointToScreen(System.Drawing.Point)">
            <summary>
            Translates the specified client coordinates to the corresponding screen location.
            </summary>
            <param name="clientPoint">The point in client coordinates to translate to screen coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.PointToClient(System.Drawing.Point)">
            <summary>
            Translates the specified screen coordinates to the corresponding client coordinate relative to the form.
            </summary>
            <param name="screenPoint">The point on the screen to translate to client coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.RectangleToClient(System.Drawing.Rectangle)">
            <summary>
            Translates the specified screen coordinates to the corresponding client coordinate relative to the form.
            </summary>
            <param name="screenRect">The rectangle on the screen to translate to client coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.RectangleToScreen(System.Drawing.Rectangle)">
            <summary>
            Translates the specified client coordinates to the corresponding screen location.
            </summary>
            <param name="clientRect">The rectangle in client coordinates to translate to screen coordinates.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ShowSystemMenu">
            <summary>
            Opens the system context menu.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Called when the window layout is calculated.
            </summary>
            <param name="levent">The layout arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use the MouseDown event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use the MouseMove event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseLeave(System.EventArgs)">
            <summary>
            Called when the mouse leaves the form.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use the MouseUp event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use the MouseDoubleClick event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.SetGdiVisible(System.Boolean)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use the MouseWheel event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnDoubleClick(System.EventArgs)">
            <summary>
            Use the MouseDoubleClick event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnClick(System.EventArgs)">
            <summary>
            Use the MouseUp event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Use the MouseUp event instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.GetChildAtPoint(System.Drawing.Point)">
            <summary>
            Gets the child control that is found at the specified viewport coordinate (includes GDI layer coordinates).
            </summary>
            <param name="position">The viewport coordinate to check at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
            <summary>
            Gets the child control that is found at the specified viewport coordinate (includes GDI layer controls).
            </summary>
            <param name="position">The viewport coordinate to check at.</param>
            <param name="skipParameters">Sets which control categories are skipped.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.ChildSkip)">
            <summary>
            Gets the child control that is found at the specified viewport coordinate (includes GDI layer controls).
            </summary>
            <param name="position">The viewport coordinate to check at.</param>
            <param name="skipParameters">Sets which control categories are skipped.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.GetGdiChildAtPoint(System.Drawing.Point,System.Windows.Forms.ChildSkip,System.Drawing.Point@)">
            <summary>
            Gets the child control that is found in the GDI layer at the specified viewport coordinate.
            </summary>
            <param name="position">The viewport coordinate to check at.</param>
            <param name="skipParameters">Sets which control categories are skipped.</param>
            <param name="clientToCtrl">If a GDI child control is found, its value is 'position' but in client coordinates relative to the returned control,
            else it's untouched.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.ChildSkip,System.Boolean@)">
            <summary>
            Gets the child control that is found at the specified viewport coordinate (includes GDI layer controls).
            </summary>
            <param name="position">The viewport coordinate to check at.</param>
            <param name="skipParameters">Sets which control categories are skipped.</param>
            <param name="isGdi">Whether the selected control is in the GDI layer.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.PointFromScreenToViewPort(System.Drawing.Point)">
            <summary>
            Converts a point from screen space to a point with coordinates relative to the view port.
            </summary>
            <param name="screenPoint">The point on screen (absolute).</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.PointFromClientToViewPort(System.Drawing.Point)">
            <summary>
            Converts a point from client space to a point with coordinates relative to the view port.
            </summary>
            <param name="clientPoint">The point relative to the client area.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.PointFromViewPortToClient(System.Drawing.Point)">
            <summary>
            Converts a point from view port space to a point with coordinates relative to the client area.
            </summary>
            <param name="viewPortPoint">The point relative to the view port.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.PointFromViewPortToScreen(System.Drawing.Point)">
            <summary>
            Converts a point from view port space to the corresponding screen coordinate.
            </summary>
            <param name="viewPortPoint">The point relative to the view port.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.AnimateBoundsTo(System.Drawing.Rectangle)">
            <summary>
            Animates the window size to the specified size.
            </summary>
            <param name="bounds">The target window size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.HaltUpDownAnimation">
            <summary>
            Halts the animation that happens when the window is minimized or restored (when the window sinks down or goes back up).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes the specified keys.
            </summary>
            <param name="msg">Not really used.</param>
            <param name="keyData">The key combination that is currently pressed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ProcessTabKey(System.Boolean)">
            <summary>
            Processes the tab key.
            </summary>
            <param name="forward">Whether to continue processing the key.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Maximize(System.Boolean)">
            <summary>
            Maximizes the window, or unmaximizes it if already maximized.
            </summary>
            <param name="animate">Whether the maximization should be animated.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Minimize">
            <summary>
            Minimizes the window, or restores it if it already minimized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the form onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the form onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the form onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.CloseAsync">
            <summary>
            Closes the window asynchronously.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnResizeEnd(System.EventArgs)">
            <summary>
            Called when resizing has finished.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMinimizeAnimationFinished">
            <summary>
            Called when the minimize animation is completed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.SetVisibleCore(System.Boolean)">
            <summary>
            Configures the visibility of the window.
            </summary>
            <param name="value">True to set the window to visible, else false.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnBorderSizeChangedInner(System.Int32,System.Int32)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnDpiChanged">
            <summary>
            Called when the form DPI has been changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ApplyOffsetsToChildren(System.Boolean)">
            <summary>
            Call all the controls have the wrong border offset.
            </summary>
            <param name="adjustSize">Whether to adjust the window size compensate as well.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnLoad(System.EventArgs)">
            <summary>
            Called when the window is loaded for the first time.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnTouchDown(System.Windows.Forms.TouchEventArgs)">
            <summary>
            Called when the screen is pressed.
            </summary>
            <param name="touch">The touch event details.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnTouchMove(System.Windows.Forms.TouchEventArgs)">
            <summary>
            Called when a finger/pen is dragged across the screen.
            </summary>
            <param name="touch">The touch event details.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnTouchUp(System.Windows.Forms.TouchEventArgs)">
            <summary>
            Called when the screen is released.
            </summary>
            <param name="touch">The touch event details.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnDisplaySettingsChanged">
            <summary>
            Called when the display resolution changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes the appropriate windows internal messages accordingly.
            </summary>
            <param name="m">The message to process.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the form is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the form.</param>
            <param name="height">The new height of the form.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnSizeChanged(System.EventArgs)">
            <summary>
            Use OnClientSizeChanged() or OnResize() instead. Called when the window client size has changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the form onto the specified canvas.
            </summary>
            <param name="g">The graphics canvas to draw on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the form onto the specified canvas.
            </summary>
            <param name="g">The graphics canvas to draw on.</param>
            <param name="location">The location to draw the form at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the window background is painted.
            </summary>
            <param name="e">The Graphics object to use to paint on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Called when the window background is painted.
            </summary>
            <param name="g">The Graphics object to use to paint on.</param>
            <param name="clippingRect">The clipping rectangle that was invalidated in client coordinates (ie. includes border).</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the window is drawn.
            </summary>
            <param name="e">The graphics canvas to draw on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Called when the window is painted. If you are going to override this method, call this base method *AFTER* your drawing is completed.
            </summary>
            <param name="g">The Graphics object to use to paint on.</param>
            <param name="clippingRect">The clipping rectangle that was invalidated in viewport coordinates (ie. excludes border).</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.DrawBorderGdi(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the border onto the specified canvas at {0, 0}.
            </summary>
            <param name="g">The canvas to draw onto.</param>
            <param name="rect">The section of the border to draw.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnStateChanged">
            <summary>
            Called when the window state is actually changed (for example, minimize is fully completed, the window is maximized or fullscreen...).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMinimizeChanged">
            <summary>
            Called whenever the window is minimized or restored.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnMaximizeChanged">
            <summary>
            Called whenever the window is maximized or unmaximized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnFramesPerSecondUpdated">
            <summary>
            Called when the FPS count is updated.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnFadeInCompleted">
            <summary>
            Called when the window fade-in is completed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnShowBorderChanged">
            <summary>
            Called when the ShowBorder value has changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnBorderLayoutChanged">
            <summary>
            Called when the border layout is adjusted.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnEnterFullScreen">
            <summary>
            Called when the window enters full screen mode.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnLeaveFullScreen">
            <summary>
            Called when the window leaves full screen mode.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnBorderStyleChanged">
            <summary>
            Called when FormBorderStyle has changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnFadeOutCompleted">
            <summary>
            Called when the fade out is completed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the form is enabled or disabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnQueryClose(System.Windows.Forms.CloseReason)">
            <summary>
            Will be called when a close message is sent to the form. Return true to close, else false to cancel and ignore closure.
            </summary>
            <param name="reason">The event that caused a close message to be sent to the form.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Don't use this, override OnQueryClose() instead.
            </summary>
            <param name="e">The cancel event arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnClosing">
            <summary>
            Called when the window is now starting to close.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Don't use this, override OnQueryClose() instead.
            </summary>
            <param name="e">The cancel event arguments.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnClosed(System.EventArgs)">
            <summary>
            Override OnFormClosed() instead.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Called when the window is closed.
            </summary>
            <param name="e">The reason the window is closed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnDisposing(System.Windows.Forms.DisposeFormEventArgs)">
            <summary>
            Called when the form is about to dispose its resources.
            If disposeManaged is false, you probably shouldn't dispose anything.
            If the return value is false, disposal is cancelled.
            There is no guarantee that this function is called (only) once for each form.
            </summary>
            <param name="e">Contains the current dispose mode. Setting the DisposeMode flag in DisposeFormEventArgs can override the current dispose mode.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.OnDisposed(System.Windows.Forms.DisposeFormEventArgs)">
            <summary>
            Called when the form is disposed. If disposeManaged is false, you probably shouldn't dispose anything.
            There is no guarantee that this function is called (only) once for each form.
            </summary>
            <param name="e">Contains the current dispose mode.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Finalize">
            <summary>
            Disposes of the form (disposes of managed resources as well).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Dispose">
            <summary>
            Disposes of the form (disposes of managed resources as well).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Dispose(System.Windows.Forms.DisposeOptions)">
            <summary>
            Called when the form is being disposed. Returns false if the disposal is cancelled by OnDisposing(), else true.
            </summary>
            <param name="options">Whether to dispose of managed resources as well.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledForm.Dispose(System.Boolean)">
            <summary>
            Please override OnDisposing() instead. If not looking to override, please use Dispose(DisposeOptions options) instead.
            </summary>
            <param name="disposing">Whether to dispose of managed resources as well.</param>
        </member>
        <member name="T:System.Windows.Forms.FadeState">
            <summary>
            Represents the styled form state.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.FadeState.Normal">
            <summary>
            No fading animation is taking place.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.FadeState.FadingIn">
            <summary>
            The window is being faded in.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.FadeState.FadingOut">
            <summary>
            The window is being faded out.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.StyledItem">
            <summary>
            A customizable styled item.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledItem.ImageChanged">
            <summary>
            Fired when the image has been changed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledItem.IconChanged">
            <summary>
            Fired when the icon has been changed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Renderer">
            <summary>
            Gets or sets the renderer to use for this item (null for default).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.DoubleClickEnabled">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.CheckBox">
            <summary>
            Gets the checkbox that renders the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.ContextMenu">
            <summary>
            The associated context menu to open on click (can be null if no sub-menu items are added).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Image">
            <summary>
            Gets or sets the image to show on the left of the item. Icon takes precendence over Image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Icon">
            <summary>
            Gets or sets the icon to show on the left of the item. Icon takes precendence over Image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Padding">
            <summary>
            Gets or sets the item padding.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Parent">
            <summary>
            Gets or sets the parent container of the item.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.ItemRenderer">
            <summary>
            Gets the renderer used for styling items.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.DefaultPadding">
            <summary>
            Gets the default item padding.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.MaximumSize">
            <summary>
            Gets or sets the maximum auto-size for the item.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.CheckOnClick">
            <summary>
            Gets or sets whether the item is checked when it is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.AddPaddingRegardless">
            <summary>
            Gets or sets whether to add checkbox padding to the control for context menu alignment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.ShowCheckBox">
            <summary>
            Gets or sets whether a checkbox is shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.IsComboBoxItem">
            <summary>
            Gets or sets whether this item represents a combo box item.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.Text">
            <summary>
            Gets or sets the text of the label shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.AutoSize">
            <summary>
            Gets or sets whether the context menu should automatically resize to fit its contents.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledItem.TextAlign">
            <summary>
            Gets or sets the alignment of each item.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.#ctor">
            <summary>
            Initializes the styled item.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.#ctor(System.Windows.Forms.StyleRenderer)">
            <summary>
            Initializes the styled tool strip using the specified renderer options.
            </summary>
            <param name="renderer">The renderer parameters to copy.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.#ctor(System.String,System.Windows.Forms.StyleRenderer)">
            <summary>
            Initializes the styled tool strip using the specified renderer options.
            </summary>
            <param name="renderer">The renderer parameters to copy.</param>
            <param name="text">The text to display on the item.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.#ctor(System.Windows.Forms.ToolStripItem,System.Windows.Forms.StyleRenderer)">
            <summary>
             Initializes the styled item using the specified renderer options based on the specified ToolStripMenuItem.
            </summary>
            <param name="item">The item whose parameters to assimilate.</param>
            <param name="renderer">The renderer to use.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Called when the bounds of the item are changed.
            </summary>
            <param name="rect">The new size of the item.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Called when the the layout of the item is calculated.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnImageChanged(System.EventArgs)">
            <summary>
            Called when the image has been changed.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnIconChanged(System.EventArgs)">
            <summary>
            Called when the icon has been changed.
            </summary>
            <param name="e">Empty.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.ProcessKeys(System.Windows.Forms.Keys)">
            <summary>
            Processes the specified shortcut keys and returns true if it invokes this item or a child item.
            </summary>
            <param name="keys">The keys that were pressed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.FitToContent">
            <summary>
            Fits the item its content.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.UpdateItemRenderer">
            <summary>
            Updates the item renderer of each sub-menu item to the value of ItemRenderer.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnFontChanged(System.EventArgs)">
            <summary>
            Fired when the font is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnDropDownShow(System.EventArgs)">
            <summary>
            Fired when the drop down menu is shown.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Fired when the check state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the item onto the graphics canvas.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnForeColorChanged(System.EventArgs)">
            <summary>
            Fired when the forecolor is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.Invalidate">
            <summary>
            Causes the item to be redrawn.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Causes the item to be redrawn.
            </summary>
            <param name="rect">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnClick(System.EventArgs)">
            <summary>
            Called when the item has been clicked.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.OnParentEnabledChanged(System.EventArgs)">
            <summary>
            Called when the parent enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.GetAutoSize">
            <summary>
            Gets the resultant size of the item if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.GetAutoSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Gets the resultant size of the item if it were to be auto-sized with both grow and shrink enabled.
            </summary>
            <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">If true, padding is included within the size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the item on the specified canvas.
            </summary>
            <param name="g">The canvas to use.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the item on the specified canvas.
            </summary>
            <param name="g">The canvas to use.</param>
            <param name="location">The location to draw the item at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGdi(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draws the item on the specified canvas.
            </summary>
            <param name="g">The canvas to use.</param>
            <param name="alignGradientWorkaround">Whether to align the gradient with the menu strip gradient if they are misaligned on a StyledMenuStrip.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGdi(System.Drawing.Graphics,System.Drawing.Point,System.Boolean)">
            <summary>
            Draws the item on the specified canvas.
            </summary>
            <param name="g">The canvas to use.</param>
            <param name="location">The location to draw the item at.</param>
            <param name="alignGradientWorkaround">Whether to align the gradient with the menu strip gradient if they are misaligned on a StyledMenuStrip.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGdi(System.Drawing.Graphics,System.Drawing.Size,System.Boolean)">
            <summary>
            Draws the item on the specified canvas.
            </summary>
            <param name="g">The canvas to use.</param>
            <param name="size">The size to draw the item at.</param>
            <param name="alignGradientWorkaround">Whether to align the gradient with the menu strip gradient if they are misaligned on a StyledMenuStrip.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.DrawGdi(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws the item on the specified canvas.
            </summary>
            <param name="g">The canvas to use.</param>
            <param name="bounds">The bounds to draw the item within.</param>
            <param name="alignGradientWorkaround">Whether to align the gradient with the menu strip gradient if they are misaligned on a StyledMenuStrip.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.Clone">
            <summary>
            Returns a clone of this item.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledItem.Dispose(System.Boolean)">
            <summary>
            Called when the button is being disposed.
            </summary>
            <param name="disposing">True to dispose managed resources.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledLabel">
            <summary>
            A label that supports custom styling and background shadow. '\v' characters will be interpreted as line spacing insertion.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.PixelAlignment">
            <summary>
            Gets or sets the pixel alignment of the rendered text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Rotation">
            <summary>
            Gets or sets the text rotation in degrees within the label (alignment should be set to middle-center).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ReduceCaching">
            <summary>
            Set to true to reduce caching, which slightly improves performance for labels that will continually change text and format attributes.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.OutlinePen">
            <summary>
            Gets or sets the pen to use to draw the outline (if not null it will be used instead of 'Outline').
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.TextBrush">
            <summary>
            Gets or sets the brush to use to draw text (if not null it will be used instead of ForeColor).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.OutlineThickness">
            <summary>
            Gets or sets the thickness of the outline.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Outline">
            <summary>
            Gets or sets the outline of the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ShadowColor">
            <summary>
            Gets or sets the shadow color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.RenderShadow">
            <summary>
            Gets or sets whether to render a shadow.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ShadowOpacity">
            <summary>
            Gets or sets the degree of opacity of the shadow (can be any value >=0).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Blur">
            <summary>
            Gets or sets the blur of the shadow.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ShadowScale">
            <summary>
            Gets or sets the scale the shadow.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ShadowOffsetX">
            <summary>
            Gets or sets the X offset of the shadow relative to text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ShadowOffsetY">
            <summary>
            Gets or sets the Y offset of the shadow relative to text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.ShadowOffset">
            <summary>
            Gets or sets the offset of the shadow relative to the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Wrapping">
            <summary>
            Gets or sets whether the text is wrapped.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Vertical">
            <summary>
            Gets or sets whether the text is vertical.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.LineSpacingMultiplier">
            <summary>
            Gets or sets the line spacing multiplier relative to font height.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.DefaultTabReplacement">
            <summary>
            Gets or sets the characters \t will be replaced with (default: 4 spaces).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.TabReplacement">
            <summary>
            Gets or sets the characters \t will be replaced with (default: 4 spaces).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledLabel.Text">
            <summary>
            Gets or sets the label text. \v represents line spacing and \t will be resolved to the specified characters.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.#ctor">
            <summary>
            Initializes a new shadowed label.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.#ctor(System.String)">
            <summary>
            Initializes a new shadowed label using the specified text.
            </summary>
            <param name="text">The text of the label.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the label is redrawn.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.OnFontChanged(System.EventArgs)">
            <summary>
            Fired when the font of the label is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the control is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the control.</param>
            <param name="height">The new height of the control.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the label onto the specified graphics canvas.
            </summary>
            <param name="g">The canvas to draw the label on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the label onto the specified graphics canvas at the specified location.
            </summary>
            <param name="g">The canvas to draw the label on.</param>
            <param name="location">The location to draw the label at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ToBitmap">
            <summary>
            Renders the label to an image.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ReplaceTabs(System.String)">
            <summary>
            Replaces tabs with the tab replacement string using tab spacing.
            </summary>
            <param name="str">The string to replace.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ReplaceTabsWithDefault(System.String)">
            <summary>
            Replaces tabs with the default tab replacement string using tab spacing.
            </summary>
            <param name="str">The string to replace.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ReplaceTabs(System.String,System.String)">
            <summary>
            Replaces tabs with the specified character string using tab spacing.
            </summary>
            <param name="str">The string to replace.</param>
            <param name="tabReplacement">The characters to replace tabs with.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ResizeFont(System.Drawing.Font,System.String,System.Drawing.SizeF)">
            <summary>
            Resizes the specified font enough so that the text fits the specified size better.
            </summary>
            <param name="font">The font to adjust.</param>
            <param name="text">The text to fit.</param>
            <param name="size">The size to fit the text to.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.GetCharSize(System.Drawing.Font,System.Char)">
            <summary>
            Gets the dimensions of the character for the specified font.
            </summary>
            <param name="font">The font to use for evaluation.</param>
            <param name="character">The character whose metrics to evaluate.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding of the label has changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Called when the text alignment is changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Fired when auto-size is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.FitToContent">
            <summary>
            Sets the size of the control to the autosize result.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.GetAutoSize">
            <summary>
            Gets the resultant size of the label if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.GetAutoSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Gets the resultant size of the label if it were to be auto-sized with both grow and shrink enabled.
            </summary>
            <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">If true, padding is included within the size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides some Windows messages of the underlying control.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ReinitGraphics">
            <summary>
            For internal use only. Reloads the shadow graphics.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledLabel.Dispose(System.Boolean)">
            <summary>
            Disposes of the label and its resources.
            </summary>
            <param name="disposing">Whether Dispose() was called manually or automatically.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledMenuStrip">
            <summary>
            A customizable styled menu strip.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledMenuStrip.PaintBackground">
            <summary>
            Fired when the background of the control is about to be painted.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.Label">
            <summary>
            Gets the label associated with the menu strip.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.ContextMenuShown">
            <summary>
            Gets whether an item is clicked and its context menu is currently opened.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.AlignGradientWorkaround">
            <summary>
            Whether to reduce item height by 1 in order to align the gradient with the menu strip.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.ItemRenderer">
            <summary>
            Gets the renderer used for styling items.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.DefaultPadding">
            <summary>
            Gets the default padding (none).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledMenuStrip.Text">
            <summary>
            Gets or sets the text displayed on the menu strip.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.#ctor">
            <summary>
            Initializes the styled menu strip.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnForeColorChanged(System.EventArgs)">
            <summary>
            Called when the menu text color has changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnContextMenuStripChanged(System.EventArgs)">
            <summary>
            Called when a context menu strip is assigned to the context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.SetDisplayedItems">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnLayoutStyleChanged(System.EventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnLayoutCompleted(System.EventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.UpdateRenderer">
            <summary>
            Updates the renderer by copying it to every item in the menu strip.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.CreateDefaultItem(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            Creates a StyledItem instance from the specified parameters.
            </summary>
            <param name="text">The text to show on the item.</param>
            <param name="image">The image to show on the item (can be null).</param>
            <param name="onClick">To be called when the item is clicked.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)">
            <summary>
            Fired when an item is added to the menu strip.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnItemRemoved(System.Windows.Forms.ToolStripItemEventArgs)">
            <summary>
            Fired when an item is removed from the context menu.
            </summary>
            <param name="e">The tool strip item that was removed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnRendererChanged(System.EventArgs)">
            <summary>
            Updates the item renderer.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is pressed on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fired when the mouse is moved over the context menu.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires when the mouse is released on the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.GetItemAt(System.Int32)">
            <summary>
            Gets the item index located at the specified X-coordinate. Returns -1 if there are no items at X.
            </summary>
            <param name="x">The X-coordinate to get the item at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.GetLocationOf(System.Int32)">
            <summary>
            Gets the X-coordinate of the item at the specified index. Returns -1 if the index is invalid.
            </summary>
            <param name="index">The index of the item to get the X-coordinate of.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.GetAutoSize">
            <summary>
            Gets the resultant size of the item if it were to be auto-sized with both grow and shrink enabled.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.GetAutoSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Gets the resultant size of the item if it were to be auto-sized with both grow and shrink enabled.
            </summary>
            <param name="maxBounds">The maximum size to allow (0 means unlimited).</param>
            <param name="includePadding">If true, padding is included within the size.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnFontChanged(System.EventArgs)">
            <summary>
            Called when the font of the menu strip has changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.FitToContent">
            <summary>
            Sets the size of the control to the autosize result.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.ProcessKeys(System.Windows.Forms.Keys)">
            <summary>
            Processes the specified shortcut keys and returns true if it invokes this item or a child item.
            </summary>
            <param name="keys">The keys that were pressed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the enabled state is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Fired when auto-size is changed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding of the menu strip has changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds of the control is about to change.
            </summary>
            <param name="x">The new X-coordinate.</param>
            <param name="y">The new Y-coordinate.</param>
            <param name="width">The new width of the control.</param>
            <param name="height">The new height of the control.</param>
            <param name="specified">Which bounds are specified.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.RaisePaintEvent(System.Windows.Forms.PaintEventHandler,System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises a paint event.
            </summary>
            <param name="handler">The event to call.</param>
            <param name="sender">The sender that needs to be painted.</param>
            <param name="e">The PaintEventArgs containing the appropriate graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the menu strip onto the specified graphics canvas.
            </summary>
            <param name="g">The canvas to draw the menu strip on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the menu strip onto the specified graphics canvas at the specified location.
            </summary>
            <param name="g">The canvas to draw the menu strip on.</param>
            <param name="location">The location to draw the menu strip at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the menu strip and its items.
            </summary>
            <param name="e">The graphics canvas to draw on.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.ToString">
            <summary>
            Gets a string that represents this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMenuStrip.Dispose(System.Boolean)">
            <summary>
            Disposes the menu strip.
            </summary>
            <param name="disposing">Whether to dispose managed resources.</param>
        </member>
        <member name="T:System.Windows.Forms.StyledMessageBox">
            <summary>
            A robust customizable message box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledMessageBox.Show(System.Object,System.String,System.Boolean,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Drawing.Font,System.Int32)">
            <summary>
            Shows the specified message box.
            </summary>
            <param name="text">The text.</param>
            <param name="caption">The caption.</param>
            <param name="styled">Whether to use a more styled interface instead of a simpler one.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="defaultButton">The default button.</param>
            <param name="font">The font of the text.</param>
            <param name="timeout">The window timeout in milliseconds. Less than 100 means no timeout.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMessageBox.ShowAsync(System.Object,System.String,System.Boolean,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Drawing.Font,System.Int32)">
            <summary>
            Shows the specified message box asynchronously.
            </summary>
            <param name="text">The text.</param>
            <param name="caption">The caption.</param>
            <param name="styled">Whether to use a more styled interface instead of a simpler one.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="defaultButton">The default button.</param>
            <param name="font">The font of the text.</param>
            <param name="timeout">The window timeout in milliseconds. Less than 100 means no timeout.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledMessageBox.MessageBoxStyledForm.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.StyledSlider">
            <summary>
            A slider that supports custom coloring and is more precise and flexible than the stock ScrollBar.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledSlider.KnobRenderer">
            <summary>
            Renders the slider knob
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyledSlider.BarRenderer">
            <summary>
            Renders the slider bar
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyledSlider.ValueChanged">
            <summary>
            Fired when the slider position has changed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.SupportsGL">
            <summary>
            Gets whether the control supports OpenGL rendering.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.LayoutEngine">
            <summary>
            Gets a dummy layout engine.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Label">
            <summary>
            Gets the label that renders the text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.LabelPadding">
            <summary>
            Gets or sets the padding that is added between the label and the slider.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.CreateParams">
            <summary>
            Initializes the control as transparent.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.FixedLabelSize">
            <summary>
            Gets or sets whether the label should be fixed to the current/specified size.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.KnobBounds">
            <summary>
            Gets the boundary rectangle of the knob.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.KnobSize">
            <summary>
            Gets or sets the size of the knob.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Horizontal">
            <summary>
            Gets or sets the orientation of the slider.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Increment">
            <summary>
            Gets or sets the increments supported by the slider (ex. 0 for no limit, 1 for whole numbers, 2 for even numbers...).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Value">
            <summary>
            Gets or sets the value of the slider.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.SmallChange">
            <summary>
            Gets or sets change when directional keys are pressed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.LargeChange">
            <summary>
            Gets or sets change when Page Up/Down keys are pressed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.MouseWheelBarPartitions">
            <summary>
            Gets or sets the number of mouse wheel bar partitions.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Text">
            <summary>
            Gets or sets the text to show in the slider label.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Dpi">
            <summary>
            Gets or sets the Dpi to use for AutoSize calculation.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.TextRenderingStyle">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.DefaultPadding">
            <summary>
            Gets the default padding of the control (1 pixel from each edge).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyledSlider.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.#ctor">
            <summary>
            Initializes a new instance of a Slider control with default values.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of a Slider control.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="value">The current value.</param>
            <param name="increment">The increments supported by the slider (ex. 0 for no limit, 1 for whole numbers, 2 for even numbers...).</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.Reset(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Resets the slider to the specified values.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="value">The current value shown by the slider.</param>
            <param name="increment">The increments supported by the slider (ex. 0 for no limit, 1 for whole numbers, 2 for even numbers...).</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.DrawGL(System.Drawing.Point)">
            <summary>
            Not implemented yet.
            Draws the control with its children in the current OpenGL context (assumes the GL matrix is set to orthographic and maps to pixel coordinates).
            </summary>
            <param name="location">The location to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.DrawGdi(System.Drawing.Graphics)">
            <summary>
            Draws the slider on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.DrawGdi(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws the slider on the specified Graphics object.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="location">The coordinates to draw at.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.DrawToBitmap(System.Drawing.Image)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="bitmap">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.DrawToBitmap(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Renders the control onto the specified image.
            </summary>
            <param name="image">The image to draw onto.</param>
            <param name="targetBounds">The bounds within which the form is rendered.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.InitLayout">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the control is to be redrawn.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnEnabledChanged(System.EventArgs)">
            <summary>
            Called when the slider is enabled or disabled.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnPaddingChanged(System.EventArgs)">
            <summary>
            Called when the padding has been changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnMouseLeave(System.EventArgs)">
            <summary>
            Called when the mouse has left the control.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is moved.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse button is released.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnSizeChanged(System.EventArgs)">
            <summary>
            Called when the window size is changed.
            </summary>
            <param name="e">Ignored.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse wheel is scrolled.
            </summary>
            <param name="e">The mouse event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises a key is released.
            </summary>
            <param name="e">The key that was released.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">The keys that were pressed.</param>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.ToString">
            <summary>
            Gets a string that describes this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyledSlider.Dispose(System.Boolean)">
            <summary>
            Called when the slider is being disposed.
            </summary>
            <param name="disposing">True to dispose managed resources.</param>
        </member>
        <member name="T:System.Windows.Forms.StyleRenderer">
            <summary>
            Renders controls in robust, highly customizable style.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.StyleRenderer.PaintEventKey">
            <summary>
            The control paint event key.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.StyleRenderer.CheckColors">
            <summary>
            Fired when the colors are refreshed and animations are started if any relevant colors have changed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.SuppressFunctionCallOnRefresh">
            <summary>
            Gets or sets whether to suppress calling the refresh function.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.SuppressColorChecking">
            <summary>
            Gets or sets whether to suppress color checking.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.FunctionToCallOnRefresh">
            <summary>
            Gets or sets the function to call on refresh (usually one that repaints the control).
            THE ANIMATION PARAMETER CAN BE NULL!
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentCheckmarkOpacityMultiplier">
            <summary>
            Gets the current checkmark opacity multiplier at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentBorder">
            <summary>
            Gets the current border color at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentBackgroundTop">
            <summary>
            Gets the current background top color at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentBackgroundBottom">
            <summary>
            Gets the current background bottom color at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentInnerBorderColor">
            <summary>
            Gets the current inner border color at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentCheckmarkColor">
            <summary>
            Gets the current checkmark color at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentInnerBorderWidth">
            <summary>
            Gets the current inner border width at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CurrentCornerRadius">
            <summary>
            Gets the current corner radius at the moment.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.InstanceAnimator">
            <summary>
            Gets or sets the animator for this instance. If null or disposed, the renderer will use an animator that is shared between all renderers.
            Null is the default. A shared renderer is recommended for UI.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.Invert">
            <summary>
            Gets or sets whether to invert the top and bottom colors.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.Enabled">
            <summary>
            Gets or sets whether the control appears enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.PixelAlignment">
            <summary>
            Gets or sets the pixel alignment mode.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.AnimationSpeed">
            <summary>
            Gets or sets the animation speed multiplier [0, 1] (ie. the distance between the current value and the target value is multiplied by this value).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.LinearSpeed">
            <summary>
            Gets or sets the linear speed that is there to counteract the exponential infinity that one gets when dividing the distance between the current value and the target value with the animation speed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.BackgroundBlend">
            <summary>
            Gets or sets the blending style used to draw the background.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CheckState">
            <summary>
            Gets or sets the checkmark state.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.CheckmarkColor">
            <summary>
            Gets or sets the checkmark color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.NormalBackgroundTop">
            <summary>
            Gets or sets the normal background top gradient.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.NormalBackgroundBottom">
            <summary>
            Gets or sets the normal background bottom gradient.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.HoverBackgroundTop">
            <summary>
            Gets or sets the hover background top gradient.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.HoverBackgroundBottom">
            <summary>
            Gets or sets the hover background bottom gradient.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.PressedBackgroundTop">
            <summary>
            Gets or sets the pressed background top gradient.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.PressedBackgroundBottom">
            <summary>
            Gets or sets the pressed background bottom gradient.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.NormalInnerBorderColor">
            <summary>
            Gets or sets the normal inner border color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.HoverInnerBorderColor">
            <summary>
            Gets or sets the hover inner border color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.NormalInnerBorderWidth">
            <summary>
            Gets or sets the normal inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.HoverInnerBorderWidth">
            <summary>
            Gets or sets the hover inner border width.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.RoundCornerRadius">
            <summary>
            Gets or sets the radius of the rounded corners.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.Border">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.MouseHovering">
            <summary>
            Gets or sets whether the mouse is hovering over the button.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.StyleRenderer.Pressed">
            <summary>
            Gets or sets whether the left mouse button is currently pressed over the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.#ctor">
            <summary>
            Initializes a new StyleRenderer using the default shared animator.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.#ctor(System.Windows.Forms.UIAnimationHandler)">
            <summary>
            Initializes a new StyleRenderer using the specified function as default to handle control invalidation.
            </summary>
            <param name="defaultFunctionToInvalidateControlOnRefresh">The animation parameter can be null!</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.#ctor(System.Windows.Forms.ProfessionalColorTable,System.Windows.Forms.UIAnimationHandler)">
            <summary>
            Initializes a new StyleRenderer with the specified color table.
            </summary>
            <param name="colorTable">The color table to use.</param>
            <param name="defaultFunctionToInvalidateControlOnRefresh">The animation parameter can be null!</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.#ctor(System.Windows.Forms.StyleRenderer)">
            <summary>
            Initializes a new StyleRenderer.
            </summary>
            <param name="renderer">The renderer to obtain the settings from (can be null).</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.CopyConfigFrom(System.Windows.Forms.StyleRenderer)">
            <summary>
            Copies the settings from the specified instance into this instance.
            </summary>
            <param name="renderer">The renderer to copy configuration from (if null then nothing is performed).</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.OnCheckColor">
            <summary>
            Checks whether the colors are at their proprietary target value, and if not animates them towards it.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.HaveSameColorScheme(System.Windows.Forms.StyleRenderer,System.Windows.Forms.StyleRenderer)">
            <summary>
            Returns whether the two instances of StyleRenderer have an identical color scheme.
            </summary>
            <param name="a">The first instance.</param>
            <param name="b">The second instance.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Renders the checkbox and checkmark.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Renders the items of a drop-down list.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.OnRenderItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Renders the item background.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Renders the items of a menu strip.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Renders the background of a button.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.MarkMouseHasLeft">
            <summary>
            Marks that the mouse has left the control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.RenderBackground(System.Drawing.Graphics,System.Drawing.RectangleF,System.Boolean,System.Boolean,System.Drawing.Image,System.Windows.Forms.ImageLayout)">
            <summary>
            Renders the styled control.
            </summary>
            <param name="g">The graphics canvas to render on.</param>
            <param name="bounds">The bounds of the control.</param>
            <param name="isEllipse">If true, the item will be rendered as an ellipse instead of a box.</param>
            <param name="alignGradientWorkaround">Whether to reduce item height by 1 in order to align the gradient with the menu strip.</param>
            <param name="controlBackground">The background image of the control.</param>
            <param name="layout">The background image layout.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.RenderCheckBox(System.Drawing.Graphics,System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            Renders the styled checkbox.
            </summary>
            <param name="g">The graphics canvas to draw on.</param>
            <param name="checkmarkBounds">The checkmark bounds.</param>
            <param name="enabled">Whether the control appears enabled.</param>
            <param name="radioButton">If true, a radio button is rendered instead of a checkbox.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.GetCheckmarkPath(System.Drawing.RectangleF)">
            <summary>
            Gets a graphics path of a checkmark within the specified bounds.
            </summary>
            <param name="bounds">The bounds to draw the checkmark inside.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.GetDisabled(System.Drawing.Color)">
            <summary>
            Gets the disabled version of the specified color.
            </summary>
            <param name="color">The color to make look disabled.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.GetDisabled(System.Drawing.BgraColor)">
            <summary>
            Gets the disabled version of the specified color.
            </summary>
            <param name="color">The color to make look disabled.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.Clone">
            <summary>
            Returns a clone of the style renderer with copied parameters (except for the parent property).
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.GetRoundedRectPath(System.Drawing.RectangleF,System.Single)">
            <summary>
            Gets the path of a rounded with the specified parameters.
            </summary>
            <param name="rect">The boundaries of the rectangle.</param>
            <param name="radius">The radius of the rounded corners.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.GetFormat(System.Drawing.ContentAlignment,System.Windows.Forms.RightToLeft,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the most appropriate StringFormat using the specified parameters.
            </summary>
            <param name="alignment">The alignment style to use.</param>
            <param name="rightToLeft">Whether to align left or right.</param>
            <param name="vertical">Whether the text is vertical or horizontal.</param>
            <param name="ellipsis">Whether to use ellipsis (...) when the text does not properly fit in the bounds.</param>
            <param name="wrapping">Whether to wrap text the text in the bounds.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.GetFormat(System.Drawing.ContentAlignment,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the most appropriate StringFormat using the specified parameters.
            </summary>
            <param name="alignment">The alignment style to use.</param>
            <param name="rightToLeft">Whether to align left or right.</param>
            <param name="vertical">Whether the text is vertical or horizontal.</param>
            <param name="ellipsis">Whether to use ellipsis (...) when the text does not properly fit in the bounds.</param>
            <param name="wrapping">Whether to wrap text the text in the bounds.</param>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.Finalize">
            <summary>
            Disposes of the animation timer.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.StyleRenderer.Dispose">
            <summary>
            Disposes of the animation timer.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.TextDialog">
            <summary>
            A simple text prompt dialog.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TextDialog.Label">
            <summary>
            The prompt label.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TextDialog.TextBox">
            <summary>
            The text box that contains the user input.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TextDialog.Button">
            <summary>
            The OK button.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TextDialog.Input">
            <summary>
            The resultant user input.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TextDialog.#ctor">
            <summary>
            Initializes a new prompt dialog with the default parameters.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TextDialog.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new prompt dialog with the default parameters.
            </summary>
            <param name="container">The container to add this dialog to.</param>
        </member>
        <member name="M:System.Windows.Forms.TextDialog.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new prompt dialog.
            </summary>
            <param name="text">The prompt text.</param>
            <param name="title">The title caption of the dialog.</param>
            <param name="button">The button text.</param>
        </member>
        <member name="M:System.Windows.Forms.TextDialog.OnResize(System.EventArgs)">
            <summary>
            Called when the dialog is resized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TextDialog.InitializeComponent">
            <summary>
            Initializes the window and its controls.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.TransitionHandlerAttribute">
            <summary>
            Marks a method as a transition handler.
            The method header has to be: static AnimationState Transition(&lt;Type&gt; currentValue, &lt;Type&gt; targetValue, double gradient, double linearSpeed, bool stoppable, ref object cachedValue, out &lt;Type&gt; newValue)
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TransitionHandlerAttribute.Type">
            <summary>
            The type of TransitionHandlerAttribute. 
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TransitionHandlerAttribute.TargetType">
            <summary>
            The type of value to transition.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TransitionHandlerAttribute.#ctor(System.Type)">
            <summary>
            Marks a method that handles a transition between two values of a given type.
            </summary>
            <param name="valueType">The type of value to handle transitions of.</param>
        </member>
        <member name="M:System.Windows.Forms.TransitionHandlerAttribute.IsDefaultAttribute">
            <summary>
            Gets whether TargetType == null.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TransitionHandlerAttribute.ToString">
            <summary>
            Gets a string representing the type handled by this instance.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TransitionHandlers.TransitionClamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single,System.Single)">
            <summary>
            Computes the transition value at the state specified but clamps gradient to the range [0, 1].
            </summary>
            <param name="basePixel">The original pixel color.</param>
            <param name="overlayPixel">The target pixel color.</param>
            <param name="gradient">The transition state (0 - original, 1 - target color).</param>
            <param name="offset">The transition linear offset.</param>
        </member>
        <member name="T:System.Windows.Forms.TransitionHandlers.BitmapAnimationWrapper">
            <summary>
            Initializes a wrapper for bitmap animation in the Animator class.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TransitionHandlers.BitmapAnimationWrapper.SyncLock">
            <summary>
            The lock to use to sync animation updating.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.TransparentControl">
            <summary>
            A transparent control for background overlay.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.TransparentControl.HTTRANSPARENT">
            <summary>
            Signals that the control is click-through (new IntPtr(-1)).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.TransparentControl.CreateParams">
            <summary>
            Initializes the control as transparent.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.TransparentControl.ClickThrough">
            <summary>
            Gets or sets whether the control is click-through or not.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TransparentControl.#ctor">
            <summary>
            Initializes a new transparent control.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.TransparentControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides some Windows messages of the underlying control.
            </summary>
            <param name="m">The message received.</param>
        </member>
        <member name="T:System.Windows.Forms.UIAnimator">
            <summary>
            Animates values and variables in a smooth synchronized manner.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.UIAnimator.SharedAnimator">
            <summary>
            The default animator that is available for shared use with the default time interval.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.UIAnimator.UpdateOnThreadPool">
            <summary>
            If true, all animation updates will be performed on separate ThreadPool threads. This usually prevents bottle-necking and deadlocks.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.UIAnimator.DisableOnSingleCoreProcessors">
            <summary>
            Whether to disable animations on single-core processors.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.UIAnimator.Updated">
            <summary>
            Called when the UIAnimator is updated.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UIAnimator.IsDisposed">
            <summary>
            Gets whether the animator is disposed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UIAnimator.Enabled">
            <summary>
            Gets or sets whether animations are enabled.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UIAnimator.DontWaitForInterval">
            <summary>
            If true, intervals are ignored and animations are updated immediately after the previous update (not recommended).
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UIAnimator.Interval">
            <summary>
            Gets or sets whether the animation update interval in milliseconds.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UIAnimator.Running">
            <summary>
            Gets whether the animations are currently running.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.#ctor">
            <summary>
            Initializes the animator with the default time interval of 22ms.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.#ctor(System.Int32)">
            <summary>
            Initializes the animator with the specified time interval.
            </summary>
            <param name="timeInterval">The animation time interval in milliseconds.</param>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.GetTarget(System.Reflection.FieldOrProperty)">
            <summary>
            Gets the current target value for the specified field/property of the specified instance if it is currently being animated (else null).
            </summary>
            <param name="entry">The field or property to check the target value of.</param>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.GetFunctionToInvalidateControlOnUpdate(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Longest professional method name I have ever made.
            </summary>
            <param name="control">The control to invalidate on refresh.</param>
            <param name="redrawChildren">Whether to redraw the child controls on redraw.</param>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.Animate(System.Reflection.FieldOrProperty,System.Object,System.Double,System.Double,System.Boolean,System.Windows.Forms.UIAnimationHandler,System.Boolean,System.ExceptionMode,System.Object)">
            <summary>
            Starts the animation using the specified parameters on the specified instance optionally refreshing the specified control using the specified update handler.
            Animations are halted the property takes Interval + 7 seconds to update.
            </summary>
            <param name="entry">The field/property whose value to animate.</param>
            <param name="targetValue">The target resultant value of the field (must be of a supported type).
            Supported types: Numeric values, Color, Color4, Point, PointF, Size, SizeF, Rectangle, RectangleF, Vector2, Vector3, Vector4, Bitmap and PixelWorker.
            If using Bitmap or PixelWorker: the lock use for syncing animations is the 'Tag' property and the target image must be the same size and bits as the original.</param>
            <param name="gradient">The animation speed multiplier [0, 1] usually 0.4 (ie. the distance between the current value and the target value is multiplied by this value).</param>
            <param name="linearSpeed">The linear speed that is there to counteract the exponential infinity that one gets when dividing the distance between the current value and the target value with the animation speed.</param>
            <param name="stoppable">If true, the animation will stop if the value didn't update as expected.</param>
            <param name="onUpdate">The method to call when the property/field is updated (can be null). If the function returns false, the animation will halt.</param>
            <param name="callIfFinished">Whether to call onUpdate of the previous animation if there is one.</param>
            <param name="exceptions">Whether to catch and ignore any error that may crop up while animating.</param>
            <param name="tag">This object is passed to callback functions.</param>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.Halt(System.Reflection.FieldOrProperty,System.Boolean,System.Boolean)">
            <summary>
            Halts the animation on the specified field/property if it is running, and returns whether an animation was halted.
            </summary>
            <param name="entry">The field or property whose animation to halt.</param>
            <param name="haltUnstoppable">If true, even animations marked as unstoppable will be halted.</param>
            <param name="callIfFinished">Whether to call onUpdate of the previous animation if there is one.</param>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.SetNextValue(System.Reflection.FieldOrProperty,System.Object,System.Double,System.Double,System.ExceptionMode,System.Object)">
            <summary>
            Sets the specified field/property on the specified instance to the next step approaching the target value using the given animation parameters. Returns false when either the setting failed or it when the target value has been reached, else true.
            </summary>
            <param name="entry">The field/property whose value to animate.</param>
            <param name="targetValue">The target resultant value of the field (must be of a supported type).
            Supported types: Numeric values, Color, Color4, Point, PointF, Size, SizeF, Rectangle, RectangleF, Vector2, Vector3, Vector4, Bitmap and PixelWorker.
            If using Bitmap or PixelWorker: the lock use for syncing animations is the 'Tag' property and the target image must be the same size and bits as the original.</param>
            <param name="gradient">The animation speed multiplier [0, 1] usually 0.4 (ie. the distance between the current value and the target value is multiplied by this value).</param>
            <param name="linearSpeed">The linear speed that is there to counteract the exponential infinity that one gets when dividing the distance between the current value and the target value with the animation speed.</param>
            <param name="exceptions">Whether to catch and ignore any error that may crop up while animating.</param>
            <param name="tag">This object is passed to callback functions.</param>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.Finalize">
            <summary>
            Disposes of the animation timer.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UIAnimator.Dispose">
            <summary>
            Disposes of the animation timer.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.UIScaler">
            <summary>
            Scales UI upon resize automatically.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.AddToScaler(System.Windows.Forms.Control)">
            <summary>
            Adds the control to the UIScaler. If the control was previously excluded, it will be re-included.
            </summary>
            <param name="control">The control whose children to scale.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.IsScaled(System.Windows.Forms.Control)">
            <summary>
            Gets whether the specified control is currently being handled by the scaler..
            </summary>
            <param name="control">The control to check for scaling.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.Reset(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Resets the control to its original attributes before scaling
            </summary>
            <param name="control">The contorl whose attributes to reset.</param>
            <param name="resetChildren">Whether to reset the attributes of its children as well.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.GetOriginalAttributes(System.Windows.Forms.Control,System.Drawing.RectangleF@)">
            <summary>
            Returns the original font size of the control, and the original bounds since the first time added to the scaler.
            </summary>
            <param name="control">The contorl whose attributes to return.</param>
            <param name="originalBounds">The original bounds of the control.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.ExcludeFontScaling(System.Windows.Forms.Control)">
            <summary>
            Excludes the specified control from font scaling, meaning that it will be scaled but font sizes will be left intact.
            </summary>
            <param name="control">The control to exclude from font scaling.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.ReincludeFontScaling(System.Windows.Forms.Control)">
            <summary>
            If the control is excluded from font scaling, it wiil be re-included.
            </summary>
            <param name="control">The control whose fonts to scale.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.ExcludeSizeScaling(System.Windows.Forms.Control)">
            <summary>
            Excludes the specified control from size scaling, meaning that the location will be moved appropriately, but size will be left intact.
            </summary>
            <param name="control">The control to exclude from size scaling.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.ReincludeSizeScaling(System.Windows.Forms.Control)">
            <summary>
            If the control is excluded from size scaling, it wiil be re-included.
            </summary>
            <param name="control">The control whose size to scale.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.Exclude(System.Windows.Forms.Control)">
            <summary>
            Adds the control to the exclusion list. It and its child controls will not be scaled.
            </summary>
            <param name="control">The control to add.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.RemoveFromScaler(System.Windows.Forms.Control)">
            <summary>
            Removes the specified control from the UIScaler.
            </summary>
            <param name="control">The control to remove.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.IsParentOrEqual(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Returns whether parentOrEqual is a parent or equal to the childControl.
            </summary>
            <param name="parentOrEqual">The control to check if it is parent or equal to childControl.</param>
            <param name="childControl">The supposed child control.</param>
        </member>
        <member name="M:System.Windows.Forms.UIScaler.IsExcluded(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Returns whether the specified control is excluded.
            </summary>
            <param name="control">The control to check.</param>
            <param name="checkParents">Whether to check whether any of its parents are excluded as well.</param>
        </member>
        <member name="T:System.Windows.Forms.UserListBox">
            <summary>
            An interactive list box supporting 'Add New...', and move up and move down arrow buttons.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.UserListBox.ItemsChangedEventHandler">
            <summary>
            A delegate representing a method called when an item was added or removed.
            </summary>
            <param name="items">A new list of all iems in the list box.</param>
        </member>
        <member name="T:System.Windows.Forms.UserListBox.ItemOrderChangedEventHandler">
            <summary>
            A delegate representing a method called when an item has beem moved up or moved down.
            </summary>
            <param name="upperItem">The first (starting from top) item whose order was changed.</param>
            <param name="lowerItem">The botton (starting from top) item whose order was changed.</param>
            <param name="upperItemIndex">The index of upperItem (the index of lowerItem is upperItem + 1).</param>
        </member>
        <member name="E:System.Windows.Forms.UserListBox.ItemsChanged">
            <summary>
            Fired when an item was added or removed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.UserListBox.ItemAdded">
            <summary>
            Fired when an item was added.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.UserListBox.ItemRemoved">
            <summary>
            Fired when an item was removed.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.UserListBox.ItemOrderChanged">
            <summary>
            Fired when an item has beem moved up or moved down.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.UserListBox.PromptText">
            <summary>
            The add item prompt text.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.UserListBox.PromptTitle">
            <summary>
            The add item prompt caption.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.UserListBox.PromptButton">
            <summary>
            The add item prompt button text.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.Items">
            <summary>
            Gets a list of all items in the list.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.RemoveDuplicates">
            <summary>
            Whether to remove or keep duplicates in the list.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.MinButtonWidth">
            <summary>
            The minimum arrow button widths.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.ShowDirectionButtons">
            <summary>
            Whether to show the move up and down arrow buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.ListBox">
            <summary>
            The ListBox control.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.UpButton">
            <summary>
            The up arrow button control.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.DownButton">
            <summary>
            The down arrow button control.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.TrimSpaces">
            <summary>
            Gets or sets whether to trim trailing spaces to user input.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.UserListBox.DefaultButtonWidth">
            <summary>
            Gets or sets the default button width, which is overriden when the splitter is resized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.#ctor">
            <summary>
            Initializes an empty list box.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.#ctor(System.Boolean)">
            <summary>
            Initializes a list box, spcifying whether to show the move up and down arrow buttons.
            </summary>
            <param name="showButtons">Whether to show the move up and down arrow buttons.</param>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.#ctor(System.String[])">
            <summary>
            Initializes a list box with the specified initial items.
            </summary>
            <param name="items">The items to add to the list box.</param>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes a list box with the specified initial items.
            </summary>
            <param name="showButtons">Whether to show the move up and down arrow buttons.</param>
            <param name="items">The items to add to the list box (can be null).</param>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.OnResize(System.EventArgs)">
            <summary>
            Called when the list box is resized.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.ShowAddItemPrompt">
            <summary>
            Shows a new item prompt to the user and adds the item if the user accepts.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.AddItem(System.String)">
            <summary>
            Adds the specified item to list box.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:System.Windows.Forms.UserListBox.Contains``1(``0[],``0)">
            <summary>
            Gets whether the specified array contains the specified element.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="array">The array to search for the item into.</param>
            <param name="element">The item to search for in the array.</param>
        </member>
    </members>
</doc>
